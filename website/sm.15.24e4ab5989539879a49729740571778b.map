{"version":3,"sources":["webpack:///./websiteSrc/examples/list/simple.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/List/index.js"],"names":["getRowData","index","SimpleList","className","fixedSize","rowCount","Row","_ref","getRowExtraProps","rowIndex","rowData","React","createElement","getRowProps","propTypes","SUBSCRIBE_EVENTS","Rows","RowComponent","API","useApi","useEffect","reportRowsRendered","rangeFrom","rangeTo","getRowKey","rowKey","result","push","key","getVisibleRows","startIndex","endIndex","rowDataGetter","rowKeyGetter","List","overscanRowsCount","rowCountWarningsTable","RowCountWarningContainer","_ref$RowComponent","RowComponentDefault","dataRef","props","_objectWithoutPropertiesLoose","scrollContainerRef","useRef","rowsContainerRef","Store","useStore","FixedSizeListStore","VariableSizeListStore","merge","totalRows","rowsContainerNode","current","scrollContainerNode","Context","Provider","value","ScrollContainer","_extends","cx","ref","Scroller","Component","defaultProps","Object","assign","commonDefaultProps","memo","RowCountWarningContainerDefault"],"mappings":";qEAAA,+BAGMA,EAAa,SAAAC,GAAK,aAAWA,GAWpBC,UATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACf,YAAC,IAAD,CACIC,WAAS,EACTD,UAAWA,EACXH,WAAYA,EACZK,SAAU,Q,2HCNdC,EAAM,SAAaC,GACrB,IAAIP,EAAaO,EAAKP,WAClBQ,EAAmBD,EAAKC,iBACxBC,EAAWF,EAAKE,SAChBC,EAAUV,EAAWS,GACzB,OAAoBE,IAAMC,cAAc,MAAOC,YAAYH,EAASD,EAAUD,GAAmBE,IAGnGJ,EAAIQ,UAAJ,GAKeR,Q,QCfXS,EAAmB,CAAC,cAAe,YAAa,gBAAiB,kBA4BtDC,EAVJ,SAAcT,GACvB,IAAIC,EAAmBD,EAAKC,iBACxBS,EAAeV,EAAKU,aACpBC,EAAMC,YAAOJ,GAIjB,OAHAK,qBAAU,WACRF,EAAIG,wBArBa,SAAwBC,EAAWC,EAASvB,EAAYwB,EAAWhB,EAAkBS,GAGxG,IAFA,IAESQ,EAFLC,EAAS,GAEIJ,EAAYC,EAASD,IACpCG,EAASD,EAAYA,EAAUF,GAAaA,EAC5CI,EAAOC,KAAmBhB,IAAMC,cAAcK,EAAc,CAC1DT,iBAAkBA,EAClBC,SAAUa,EACVM,IAAKH,EACLzB,WAAYA,KAIhB,OAAO0B,EAUAG,CAAeX,EAAIY,WAAYZ,EAAIa,SAAUb,EAAIc,cAAed,EAAIe,aAAczB,EAAkBS,I,gCCVzGiB,EAAO,SAAc3B,GACvB,IAAIH,EAAYG,EAAKH,UACjBJ,EAAaO,EAAKP,WAClBwB,EAAYjB,EAAKiB,UACjBhB,EAAmBD,EAAKC,iBACxBH,EAAWE,EAAKF,SAChB8B,EAAoB5B,EAAK4B,kBACzBC,EAAwB7B,EAAK6B,sBAC7BC,EAA2B9B,EAAK8B,yBAChCC,EAAoB/B,EAAKU,aACzBA,OAAqC,IAAtBqB,EAA+BC,EAAsBD,EACpEE,EAAUjC,EAAKiC,QACfrC,EAAYI,EAAKJ,UACjBsC,EAAQC,YAA8BnC,EAAM,CAAC,YAAa,aAAc,YAAa,mBAAoB,WAAY,oBAAqB,wBAAyB,2BAA4B,eAAgB,UAAW,cAE1NoC,EAAqBC,mBACrBC,EAAmBD,mBACnBE,EAAQC,YAAS3C,EAAY4C,IAAqBC,IAAuBT,GAW7E,OAVApB,qBAAU,WACR0B,EAAMI,MAAM,CACVlB,cAAehC,EACfiC,aAAcT,EACdW,kBAAmBA,EACnBgB,UAAW9C,EACX+C,kBAAmBP,EAAiBQ,QACpCC,oBAAqBX,EAAmBU,aAGxB1C,IAAMC,cAAc2C,IAAQC,SAAU,CACxDC,MAAOX,GACNzC,EAAW,EAAiBM,IAAMC,cAAc8C,IAAiBC,YAAS,CAC3ExD,UAAWyD,YAAG,sBAAuBzD,GACrC0D,IAAKlB,GACJF,GAAqB9B,IAAMC,cAAckD,IAAU,CACpDC,UAAW,QACIpD,IAAMC,cAAc,MAAO,CAC1CiD,IAAKhB,GACSlC,IAAMC,cAAcI,EAAM,CACxCC,aAAcA,EACdT,iBAAkBA,MACb4B,EAAqCzB,IAAMC,cAAcyB,EAA0B,KAAMD,EAAsB/B,IAAa,OAGrI6B,EAAKpB,UAAL,GAIAoB,EAAK8B,aAAeC,OAAOC,OAAO,GAAIC,IAAoB,CAMxDlD,aAAcmD,eAAK7B,GACnBF,yBAA0BgC,MAEbD,mBAAKlC","file":"15.5e501b1ac0daa16856ea.js","sourcesContent":["import React from \"react\";\nimport List from \"af-virtual-scroll/lib/List\";\n\nconst getRowData = index => `row ${index}`;\n\nconst SimpleList = ({ className }) => (\n    <List\n        fixedSize\n        className={className}\n        getRowData={getRowData}\n        rowCount={500000}\n    />\n);\n\nexport default SimpleList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#startIndex\", \"#endIndex\", \"#rowKeyGetter\", \"#rowDataGetter\"];\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n  var API = useApi(SUBSCRIBE_EVENTS);\n  useEffect(function () {\n    API.reportRowsRendered();\n  });\n  return getVisibleRows(API.startIndex, API.endIndex, API.rowDataGetter, API.rowKeyGetter, getRowExtraProps, RowComponent);\n};\n\nexport default Rows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"RowCountWarningContainer\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var Store = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef);\n  useEffect(function () {\n    Store.merge({\n      rowDataGetter: getRowData,\n      rowKeyGetter: getRowKey,\n      overscanRowsCount: overscanRowsCount,\n      totalRows: rowCount,\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    });\n  });\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  RowCountWarningContainer: PropTypes.any,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n      memo(observer(RowComponentDefault)) will do the trick.\n  */\n  RowComponent: memo(RowComponentDefault),\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default memo(List);"],"sourceRoot":""}