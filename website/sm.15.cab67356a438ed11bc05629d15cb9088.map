{"version":3,"sources":["webpack:///./websiteSrc/Docs/index.js","webpack:///./websiteSrc/Docs/basic.js"],"names":["DocPages","basic","data-required","wrapperCss","Docs","docpage","useParams","PageComponent","css"],"mappings":";sGAKA,IAAMA,EAAW,CACbC,MCJU,kBACV,YAAC,WAAD,KACI,sCACA,sBACI,sBACI,kBAAIC,iBAAA,GAAJ,YACA,kEAIJ,sBACI,kBAAIA,iBAAA,GAAJ,wBACA,6JAIJ,sBACI,6CACA,0GAIJ,sBACI,4DACA,sIAIJ,sBACI,mCACA,8DAIJ,sBACI,mCACA,0PAMJ,sBACI,2CACA,0GDrCVC,EAAa,CAAH,oJAuBDC,UAXF,WAAM,IACPC,EAAYC,cAAZD,QACFE,EAAgBF,GAAWL,EAAUK,GAE3C,OAAOE,EACH,mBAAKC,IAAKL,GACN,YAACI,EAAD,OAEJ","file":"15.42848025d83f8c069b4b.js","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { css } from \"@emotion/core\";\nimport Basic from \"./basic\";\n\nconst DocPages = {\n    basic: Basic\n};\n\nconst wrapperCss = css`\n    text-align: left;\n    margin-left: 1em;\n\n    [data-required] {\n        &:after{\n            color: #780b0b;\n            content: \" (required)\";\n        }\n    }\n`;\n\nconst Docs = () => {\n    const { docpage } = useParams();\n    const PageComponent = docpage && DocPages[ docpage ];\n\n    return PageComponent ? (\n        <div css={wrapperCss}>\n            <PageComponent />\n        </div>\n    ) : \"Page not found\";\n};\n\nexport default Docs;","import React, { Fragment } from \"react\";\n\nconst Basic = () => (\n    <Fragment>\n        <h3>Common props</h3>\n        <ul>\n            <li>\n                <h4 data-required>rowCount</h4>\n                <p>\n                    Indicates number of rows for table/list.\n                </p>\n            </li>\n            <li>\n                <h4 data-required>getRowData(rowIndex)</h4>\n                <p>\n                    Returns row data object. If a reference to this method changes - table/list reloads data, so it should be wrapped with useCallback.\n                </p>\n            </li>\n            <li>\n                <h4>getRowKey(rowIndex)</h4>\n                <p>\n                    By default rowIndex is used as row key. If you want to optimize this - go ahead.\n                </p>\n            </li>\n            <li>\n                <h4>getRowExtraProps(rowData,rowIndex)</h4>\n                <p>\n                    Returns an object of extra props, that will be passed to row wrapper(usually tr for table and div for list).\n                </p>\n            </li>\n            <li>\n                <h4>className</h4>\n                <p>\n                    Widget wrapper additional css class.\n                </p>\n            </li>\n            <li>\n                <h4>fixedSize</h4>\n                <p>\n                    By default table/list assumes, that it's rows have different heights.\n                    If you are SURE, that all rows always will have same height(after collapsing widget width, etc.) - put this prop as true.\n                    This will optimize calculations.\n                </p>\n            </li>\n            <li>\n                <h4>overscanRowsCount</h4>\n                <p>\n                    Determines, how many rows are drawn above and below table/list visible part.\n                </p>\n            </li>\n        </ul>\n    </Fragment>\n);\n\nexport default Basic;"],"sourceRoot":""}