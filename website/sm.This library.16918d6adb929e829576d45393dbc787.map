{"version":3,"sources":["webpack:///./lib/useApi/index.js","webpack:///./lib/utils/cx/index.js","webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/Context.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/models/ListBase.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/constants/resizeObserverOptions.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/common/RowCountWarningContainer.js","webpack:///./lib/Table/common/Cell.js","webpack:///./lib/utils/isPositionStickySupported/index.js","webpack:///./lib/models/createTable.js","webpack:///./lib/models/FixedSizeTable.js","webpack:///./lib/models/VariableSizeTable.js","webpack:///./lib/Table/common/Row.js","webpack:///./lib/Table/common/TotalsCell.js","webpack:///./lib/Table/common/Colgroup.js","webpack:///./lib/Table/NonSticky/TableWrapper/index.js","webpack:///./lib/Table/common/HeaderCells.js","webpack:///./lib/Table/common/Thead.js","webpack:///./lib/Table/common/FooterCells.js","webpack:///./lib/Table/common/Tfoot.js","webpack:///./lib/Table/common/Rows.js","webpack:///./lib/Table/common/Tbody.js","webpack:///./lib/Table/common/BodyTable.js","webpack:///./lib/Table/NonSticky/useColWidthsResizeObserver/index.js","webpack:///./lib/Table/common/TbodyScroller.js","webpack:///./lib/Table/NonSticky/index.js","webpack:///./lib/Table/Sticky/index.js","webpack:///./lib/Table/index.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/List/index.js"],"names":["reducer","x","useApi","subscribeEvents","API","useContext","Context","up","useReducer","useLayoutEffect","j","length","on","_j","off","cx","baseClass","extraClass","getPropsGetter","propName","data","index","getExtraProps","_props","props","extraProps","Object","assign","getRowProps","getCellProps","createContext","SUBSCRIBE_EVENTS","el","React","createElement","className","memo","style","height","widgetScrollHeight","cloneElement","ScrollContainer","forwardRef","_ref","ref","children","onScroll","reportScrollLeft","_objectWithoutPropertiesLoose","scrollHandler","useCallback","e","_e$target","target","scrollTop","scrollLeft","set","useEffect","current","R","ResizeObserver","entries","_entries$0$contentRec","contentRect","width","Math","round","observe","resizeObserverOptions","unobserve","_extends","tabIndex","HeightProvider","useStore","StoreConstructor","dataRef","finalDataRef","useRef","Store","destructor","FixedSizeList","_ListBase","_inheritsLoose","Derived","_proto","prototype","_this","call","this","updateWidgetScrollHeight","updateEstimatedRowHeight","estimatedRowHeight","totalRows","node","rowsContainerNode","firstElementChild","offsetHeight","getVisibleRangeStart","distance","getDistanceBetweenIndexes","startIndex","endIndex","ListBase","getRowDataInitial","Error","_EventEmitter","virtualTopOffset","overscanRowsCount","widgetHeight","widgetWidth","rowKeyGetter","undefined","rowDataGetter","scrollContainerNode","increaseEndIndexIfNeeded","debounce","currentVisibleDist","updateEndIndex","_assertThisInitialized","cancel","updateStartOffset","paramName","paramValue","emit","merge","params","k","removeAllListeners","reportRowsRendered","_this$getVisibleRange","newVisibleStartIndex","remainder","newStartIndex","max","overscanOffset","newEndIndex","min","scrollToRow","clamp","scrollToStart","EventEmitter","SegmentsTreeCache","Uint32Array","VariableSizeList","sTree","N","shouldResetInvisibleRowHeights","setVisibleRowsHeights","newHeight","_assertThisInitialize","l","r","rowHeightsSum","rowCounter","child","nextElementSibling","parseInt","getAttribute","calculateParentsInRange","maxWait","prependListener","resetCache","reallocateCacheIfNeeded","markResetInvisibleRowHeights","i","dist","v","nodeIndex","fill","suggestedN","pow","ceil","log2","res","box","Component","useApiPlugin","commonDefaultProps","fixedSize","rowCount","RowCountWarningContainer","Cell","rowData","rowIndex","column","columnIndex","getCellExtraProps","render","getEmptyCellData","dataKey","format","getCellData","cellData","propTypes","stickyCssText","map","p","join","once","elStyle","document","cssText","position","includes","OrderedRowsCache","TbodyColumnWidthsCache","L","Intl","Collator","getValueForSorting","srcVal","fieldName","defaultValue","getRowData","result","reduceRange","startValue","getNewRes","TotalsCachePart","count","sum","average","createTable","BaseClass","constructorCallback","_BaseClass","_temp","columns","totals","headlessMode","sortColumnIndex","sortDirectionSign","tbodyColumnWidths","orderedRows","totalsCache","create","refreshTotals","_this$columns$j","refreshTotalsForColumnRaw","refreshSorting","_this$columns$_this$s","sort","sorter","method","directionSign","fn","compare","subtract","a","b","v1","v2","getSorter","resetColumnWidthsCache","refreshRowsOrder","cellDataGetter","curTotals","curCachePart","totalType","oldVal","newVal","tmpSum","add","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","process","refreshTotalsForColumn","col","find","c","setSortParams","colIndex","rows","instance","Row","CellComponent","getRowExtraProps","rowDataIndex","visibility","FinalCellComponent","key","TotalsCell","cellTotals","formatTotal","summaryType","title","capitalize","commonSubscribeEvents","nonStickySubscribeEvents","concat","useTbodyWidths","_useApiPlugin","_ref2","cols","background","border","TableWrapper","_useApi","marginLeft","Colgroup","SortDirections","label","trRef","getCellStyle","clickHandler","onClick","HeaderCells","FooterCells","TotalsCellComponent","curTotalsCache","Rows","RowComponent","rangeFrom","rangeTo","getRowKey","rowKey","idx","push","getVisibleRows","tbodyRef","BodyTable","fixedLayout","tableStyle","tableLayout","minWidth","useColWidthsResizeObserver","observerRef","O","_entries$j","disconnect","TbodyScroller","Scroller","scrollContainerRef","widthsObserverRef","Thead","useMemo","Tfoot","Tbody","Table","rowCountWarningsTable","headless","useStickyIfPossible","FixedSizeTableStore","VariableSizeTableStore","ComponentVariant","isPositionStickySupported","StickyComponent","NonStickyComponent","Provider","value","defaultProps","RowComponentDefault","CellComponentDefault","TotalsCellComponentDefault","RowCountWarningContainerDefault","List","_ref$RowComponent","rowsContainerRef","FixedSizeListStore","VariableSizeListStore"],"mappings":"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","file":"This library.2a2227ac1368bf362a43.js","sourcesContent":["import { useContext, useLayoutEffect, useReducer } from \"react\";\nimport Context from \"../Context\";\n\nvar reducer = function reducer(x) {\n  return x + 1;\n};\n/*\n\tTODO:\n\t\twhy useEffect does not properly update colgroup of tbody, when rowcount changes from 0 to positive value?\n*/\n\n\nvar useApi = function useApi(subscribeEvents) {\n  var API = useContext(Context);\n\n  var _useReducer = useReducer(reducer, 0),\n      up = _useReducer[1];\n\n  useLayoutEffect(function () {\n    for (var j = 0; j < subscribeEvents.length; j++) {\n      API.on(subscribeEvents[j], up);\n    }\n\n    return function () {\n      for (var _j = 0; _j < subscribeEvents.length; _j++) {\n        API.off(subscribeEvents[_j], up);\n      }\n    };\n  }, subscribeEvents);\n  return API;\n};\n\nexport default useApi;","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;","var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = getPropsGetter(\"aria-colindex\");","import { createContext } from \"react\";\nexport default createContext();","import React, { cloneElement, memo } from \"react\";\nimport useApi from \"../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#widgetScrollHeight\"];\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      height = _useApi.widgetScrollHeight;\n\n  var props = {\n    style: {\n      height: height\n    }\n  };\n  return cloneElement(el, props);\n};\n\nexport default memo(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nimport resizeObserverOptions from \"../constants/resizeObserverOptions\";\nvar SUBSCRIBE_EVENTS = [];\nvar ScrollContainer = forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      reportScrollLeft = _ref.reportScrollLeft,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\", \"reportScrollLeft\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.set(\"scrollTop\", scrollTop);\n\n    if (reportScrollLeft) {\n      API.set(\"scrollLeft\", scrollLeft);\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll, reportScrollLeft]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        var _entries$0$contentRec = entries[0].contentRect,\n            width = _entries$0$contentRec.width,\n            height = _entries$0$contentRec.height;\n        API.set(\"widgetHeight\", Math.round(height)).set(\"widgetWidth\", Math.round(width));\n      }\n    });\n    R.observe(el, resizeObserverOptions);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\n      tabIndex=\"0\" is for proper keyboard nav\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","import { useRef, useEffect } from \"react\";\n/*\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\n    As it is not dom-related, I decided to avoid forwardRef\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef) {\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return Store;\n};\n\nexport default useStore;","import _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ListBase from \"./ListBase\";\n\nvar FixedSizeList = /*#__PURE__*/function (_ListBase) {\n  _inheritsLoose(FixedSizeList, _ListBase);\n\n  var _super = _createSuper(FixedSizeList);\n\n  var _proto = FixedSizeList.prototype;\n\n  _proto.updateWidgetScrollHeight = function updateWidgetScrollHeight() {\n    return this.set(\"widgetScrollHeight\", this.estimatedRowHeight * this.totalRows);\n  };\n\n  _proto.updateEstimatedRowHeight = function updateEstimatedRowHeight() {\n    var node = this.rowsContainerNode;\n\n    if (node) {\n      var firstElementChild = node.firstElementChild;\n\n      if (firstElementChild) {\n        this.set(\"estimatedRowHeight\", node.firstElementChild.offsetHeight);\n      }\n    }\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return [distance / estimatedRowHeight | 0, distance % estimatedRowHeight];\n  };\n\n  function FixedSizeList() {\n    var _this;\n\n    _this = _ListBase.call(this) || this;\n\n    _this.on(\"#estimatedRowHeight\", _this.updateWidgetScrollHeight).on(\"#widgetWidth\", _this.updateEstimatedRowHeight);\n\n    return _this;\n  }\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  return FixedSizeList;\n}(ListBase);\n\n;\nexport default FixedSizeList;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport clamp from \"lodash/clamp\";\nimport EventEmitter from \"af-tools/lib/eventEmitters/Basic\";\nimport debounce from \"lodash/debounce\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar END_INDEX_CHECK_INTERVAL = 400;\nvar DEFAULT_ESTIMATED_ROW_HEIGHT = 16;\n\nvar ListBase = /*#__PURE__*/function (_EventEmitter) {\n  _inheritsLoose(ListBase, _EventEmitter);\n\n  var _super = _createSuper(ListBase);\n\n  var _proto = ListBase.prototype;\n\n  _proto.set = function set(paramName, paramValue) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!this.hasOwnProperty(paramName)) {\n        throw new Error(\"Trying to merge key, which does not exist: \" + paramName);\n      }\n    }\n\n    if (this[paramName] !== paramValue) {\n      this[paramName] = paramValue;\n      this.emit(\"#\" + paramName);\n    }\n\n    return this;\n  };\n\n  _proto.merge = function merge(params) {\n    for (var k in params) {\n      this.set(k, params[k]);\n    }\n\n    return this;\n  };\n\n  function ListBase() {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    _this.totalRows = 0;\n    _this.startIndex = 0;\n    _this.endIndex = 0;\n    _this.virtualTopOffset = 0;\n    _this.widgetScrollHeight = 0;\n    _this.overscanRowsCount = 0;\n    _this.estimatedRowHeight = DEFAULT_ESTIMATED_ROW_HEIGHT;\n    _this.scrollTop = 0;\n    _this.widgetHeight = 0;\n    _this.widgetWidth = 0;\n    _this.rowKeyGetter = undefined;\n    _this.rowDataGetter = getRowDataInitial;\n    _this.rowsContainerNode = null;\n    _this.scrollContainerNode = null;\n    _this.increaseEndIndexIfNeeded = debounce(function () {\n      var currentVisibleDist = _this.getDistanceBetweenIndexes(_this.startIndex, _this.endIndex);\n\n      if (_this.widgetHeight > _this.virtualTopOffset + currentVisibleDist - _this.scrollTop) {\n        _this.updateEndIndex();\n      }\n\n      return _assertThisInitialized(_this);\n    }, END_INDEX_CHECK_INTERVAL);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var absentMethods = [\"updateWidgetScrollHeight\", \"getDistanceBetweenIndexes\", \"getVisibleRangeStart\"].filter(function (fn) {\n        return !_this[fn];\n      });\n\n      if (absentMethods.length) {\n        throw new Error(\"Absent methods: \" + absentMethods.join(\",\"));\n      }\n    }\n\n    _this.on(\"#totalRows\", _this.updateWidgetScrollHeight).on(\"#totalRows\", _this.updateEndIndex).on(\"#widgetScrollHeight\", _this.increaseEndIndexIfNeeded).on(\"#endIndex\", _this.increaseEndIndexIfNeeded.cancel).on(\"#scrollTop\", _this.updateStartOffset).on(\"#overscanRowsCount\", _this.updateStartOffset).on(\"#widgetHeight\", _this.updateEndIndex).on(\"#startIndex\", _this.updateEndIndex);\n\n    return _this;\n  }\n  /*\n      Column heights may change during scroll/width-change\n  */\n\n\n  _proto.destructor = function destructor() {\n    this.increaseEndIndexIfNeeded.cancel();\n    this.removeAllListeners();\n  };\n\n  _proto.reportRowsRendered = function reportRowsRendered() {\n    this.emit(\"rows-rendered\");\n  };\n\n  _proto.updateStartOffset = function updateStartOffset() {\n    var scrollTop = this.scrollTop,\n        overscanRowsCount = this.overscanRowsCount;\n\n    var _this$getVisibleRange = this.getVisibleRangeStart(scrollTop),\n        newVisibleStartIndex = _this$getVisibleRange[0],\n        remainder = _this$getVisibleRange[1];\n\n    var newStartIndex = Math.max(0, newVisibleStartIndex - overscanRowsCount);\n    var overscanOffset = this.getDistanceBetweenIndexes(newStartIndex, newVisibleStartIndex);\n    return this.set(\"virtualTopOffset\", scrollTop - remainder - overscanOffset).set(\"startIndex\", newStartIndex);\n  };\n\n  _proto.updateEndIndex = function updateEndIndex() {\n    var _this$getVisibleRange2 = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n        newEndIndex = _this$getVisibleRange2[0];\n    /*\n        getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\n        but for endIndex we need \"<=\", so adding 1 artificially.\n    */\n\n\n    return this.set(\"endIndex\", Math.min(newEndIndex + 1 + this.overscanRowsCount, this.totalRows));\n  };\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      index = clamp(index, 0, this.totalRows);\n      node.scrollTop = this.getDistanceBetweenIndexes(0, index);\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ListBase;\n}(EventEmitter);\n\n;\nexport default ListBase;","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ListBase from \"./ListBase\";\nimport debounce from \"lodash/debounce\"; // Uint16 cannot be used here, because array stores intermediate sums, which can be huge.\n\nvar SegmentsTreeCache = Uint32Array;\n/*\n    This constant is used for 2 reasons:\n        * Math.log2( 1 ) is 0, which is not correct for cache size calculation\n        * We should always have some extra space for new rows. We do not want to reallocate cache every time.\n*/\n\nvar MIN_TREE_CACHE_OFFSET = 32;\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 50;\nvar ROW_MEASUREMENT_DEBOUNCE_MAXWAIT = 150;\n\nvar VariableSizeList = /*#__PURE__*/function (_ListBase) {\n  _inheritsLoose(VariableSizeList, _ListBase);\n\n  var _super = _createSuper(VariableSizeList);\n\n  var _proto = VariableSizeList.prototype;\n\n  /*\n      Two vars for non-recursive segments tree;\n      Could just make [ 0, 0 ], but want to keep type of heightsCache always of same type.\n  */\n\n  /*\n      When all row heights are different,\n      we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\n      basing on what we know: heights between startIndex and endIndex.\n      Using simple average by default.\n  */\n  _proto.markResetInvisibleRowHeights = function markResetInvisibleRowHeights() {\n    this.shouldResetInvisibleRowHeights = true;\n  };\n\n  _proto.updateWidgetScrollHeight = function updateWidgetScrollHeight() {\n    /* In segments tree 1 node is always sum of all elements */\n    return this.set(\"widgetScrollHeight\", this.sTree[1]);\n  };\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        sTree[i] = sTree[i << 1] + sTree[i << 1 | 1];\n      }\n    }\n\n    return this;\n  }\n  /*\n      TODO: maybe some react-like performUnitOfWork logic is needed here?\n  */\n  ;\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var sTree = this.sTree,\n        N = this.N;\n    var nodeIndex = 1,\n        v;\n\n    while (nodeIndex < N) {\n      v = sTree[nodeIndex <<= 1];\n\n      if (dist >= v) {\n        dist -= v;\n        nodeIndex |= 1;\n      }\n    }\n\n    return [nodeIndex - N, dist];\n  };\n\n  _proto.resetCache = function resetCache() {\n    var sTree = this.sTree,\n        estimatedRowHeight = this.estimatedRowHeight,\n        N = this.N,\n        totalRows = this.totalRows;\n    sTree.fill(estimatedRowHeight, N, N + totalRows);\n    /*\n        Trees are not always ideally allocated, gaps are possible.\n        Classical way for calculating parents is much simpler,\n        but can do much more work(summing zeros) in such conditions. Commented classic algo:\n             for( let i = N + totalRows >> 1, j; i > 0; --i ){\n            j = i << 1;\n            sTree[ i ] = sTree[ j ] + sTree[ j | 1 ];\n        }\n    */\n\n    return this.calculateParentsInRange(0, totalRows);\n  };\n\n  _proto.reallocateCacheIfNeeded = function reallocateCacheIfNeeded() {\n    var suggestedN = this.totalRows ? Math.pow(2, Math.ceil(Math.log2(this.totalRows + MIN_TREE_CACHE_OFFSET))) : 1;\n\n    if (this.N !== suggestedN) {\n      this.N = suggestedN;\n      this.sTree = new SegmentsTreeCache(suggestedN * 2);\n    }\n\n    return this;\n  };\n\n  function VariableSizeList() {\n    var _this;\n\n    _this = _ListBase.call(this) || this;\n    _this.sTree = new SegmentsTreeCache(2);\n    _this.N = 1;\n    _this.shouldResetInvisibleRowHeights = true;\n    _this.setVisibleRowsHeights = debounce(function () {\n      var node = _this.rowsContainerNode;\n\n      if (node) {\n        var _assertThisInitialize = _assertThisInitialized(_this),\n            sTree = _assertThisInitialize.sTree,\n            N = _assertThisInitialize.N;\n\n        var l = -1,\n            r = -1,\n            rowHeightsSum = 0,\n            rowCounter = 0;\n        /*\n            Some benchmarks inspire me to use nextElementSibling\n            https://jsperf.com/nextsibling-vs-childnodes-increment/2\n        */\n\n        for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n          /*\n              * aria-rowindex is counted from 1 according to w3c spec;\n              * parseInt with radix is 2x faster, then +, -, etc.\n                https://jsperf.com/number-vs-parseint-vs-plus/116\n          */\n          index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n          if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n            throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n          }\n\n          newHeight = child.offsetHeight;\n          rowHeightsSum += newHeight;\n\n          if (sTree[N + index] !== newHeight) {\n            // console.log( \"%d| was: %d; is: %d\", index, sTree[N+index],newHeight)\n            sTree[N + index] = newHeight;\n\n            if (l === -1) {\n              l = index;\n            }\n\n            r = index;\n          }\n        }\n\n        if (l !== -1) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.log(\"Updating heights in range: %d - %d\", l, r);\n          }\n\n          if (_this.shouldResetInvisibleRowHeights) {\n            _this.set(\"estimatedRowHeight\", Math.round(rowHeightsSum / rowCounter));\n\n            _this.shouldResetInvisibleRowHeights = false;\n          } else {\n            _this.calculateParentsInRange(l, r).updateWidgetScrollHeight();\n          }\n        }\n      }\n\n      return _assertThisInitialized(_this);\n    }, ROW_MEASUREMENT_DEBOUNCE_INTERVAL, {\n      maxWait: ROW_MEASUREMENT_DEBOUNCE_MAXWAIT\n    });\n\n    _this.prependListener(\"#totalRows\", _this.resetCache).prependListener(\"#totalRows\", _this.reallocateCacheIfNeeded).on(\"#estimatedRowHeight\", _this.resetCache).on(\"#estimatedRowHeight\", _this.updateWidgetScrollHeight).on(\"rows-rendered\", _this.setVisibleRowsHeights).on(\"#widgetWidth\", _this.markResetInvisibleRowHeights).on(\"#widgetWidth\", _this.setVisibleRowsHeights);\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.setVisibleRowsHeights.cancel();\n\n    _ListBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += sTree[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += sTree[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  return VariableSizeList;\n}(ListBase);\n\n;\nexport default VariableSizeList;","/* It is important, because all observed dimensions ( td widths, tr heights ) must include paddings and borders */\nvar resizeObserverOptions = {\n  box: \"border-box\"\n};\nexport default resizeObserverOptions;","import React, { memo } from \"react\";\nimport useApiPlugin from \"../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#virtualTopOffset\"];\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApiPlugin = useApiPlugin(SUBSCRIBE_EVENTS),\n      virtualTopOffset = _useApiPlugin.virtualTopOffset;\n  /*\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default memo(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rowCount: 0,\n  overscanRowsCount: 4\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport cx from \"../utils/cx\";\n\nvar RowCountWarningContainer = function RowCountWarningContainer(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-row-count-warning-container\", className)\n  }, props));\n};\n\nexport default RowCountWarningContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCellProps } from \"../../utils/extraPropsGetters\";\n/*\n    If all cells in a row would be completely empty - row can \"collapse\" short.\n    To prevent it we can fill it with &nbsp;\n*/\n\nvar DEFAULT_EMPTY_CELL_CONTENT = \"\\xA0\";\n\nvar Cell = function Cell(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      column = _ref.column,\n      columnIndex = _ref.columnIndex,\n      getCellExtraProps = _ref.getCellExtraProps;\n  var render = column.render,\n      getEmptyCellData = column.getEmptyCellData,\n      dataKey = column.dataKey,\n      format = column.format,\n      getCellData = column.getCellData;\n  var cellData = rowData && (getCellData ? getCellData(rowData, rowIndex) : rowData[dataKey]);\n\n  if (cellData === undefined || cellData === \"\") {\n    cellData = getEmptyCellData ? getEmptyCellData(rowIndex, column) : DEFAULT_EMPTY_CELL_CONTENT;\n  } else {\n    if (format) {\n      cellData = format(cellData, rowData);\n    }\n\n    if (render) {\n      cellData = render(cellData, rowData, column);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", getCellProps(rowData, columnIndex, getCellExtraProps), cellData);\n};\n\nCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  rowIndex: PropTypes.number.isRequired,\n  columnIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  rowData: PropTypes.object,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Cell;","import once from \"lodash/once\";\nvar stickyCssText = [\"\", \"-webkit-\", \"-ms-\"].map(function (p) {\n  return \"position:\" + p + \"sticky\";\n}).join(\";\");\n\nvar isPositionStickySupported = function isPositionStickySupported() {\n  var elStyle = document.createElement(\"a\").style;\n  elStyle.cssText = stickyCssText;\n  return elStyle.position.includes(\"sticky\");\n};\n/*\n    'once' is needed to use this function frequently without perf issues.\n*/\n\n\nexport default once(isPositionStickySupported);","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport debounce from \"lodash/debounce\";\nimport subtract from \"lodash/subtract\";\nimport add from \"lodash/add\";\nvar OrderedRowsCache = Uint32Array;\nvar TbodyColumnWidthsCache = Uint32Array;\nvar REFRESH_SORT_DEBOUNCE_INTERVAL = 500;\nvar L = new Intl.Collator();\n\nvar getValueForSorting = function getValueForSorting(srcVal, rowIndex, fieldName, defaultValue, getRowData, getCellData) {\n  var result = getRowData(srcVal);\n\n  if (result) {\n    return getCellData ? getCellData(result, rowIndex) : result[fieldName];\n  }\n\n  return defaultValue;\n};\n\nvar getSorter = function getSorter(getRowData, fieldName, method, getCellData, directionSign) {\n  var fn = method === \"locale\" ? L.compare : subtract;\n  var defaultValue = method === \"locale\" ? \"\" : 0;\n  return function (a, b, i) {\n    var v1 = getValueForSorting(a, i, fieldName, defaultValue, getRowData, getCellData);\n    var v2 = getValueForSorting(b, i, fieldName, defaultValue, getRowData, getCellData);\n    return fn(v1, v2) * directionSign;\n  };\n};\n\nvar reduceRange = function reduceRange(totalRows, dataKey, getRowData, getCellData, startValue, getNewRes) {\n  var res = startValue;\n\n  for (var i = 0, rowData, cellData; i < totalRows; i++) {\n    rowData = getRowData(i);\n    cellData = getCellData ? getCellData(rowData, i) : rowData[dataKey];\n    res = getNewRes(res, cellData);\n  }\n\n  return res;\n};\n/*\n    We could use simple object literal,\n    but constructors with stable-order this initialization enforce \"hidden-classes\" v8 optimization\n*/\n\n\nvar TotalsCachePart = function TotalsCachePart() {\n  this.count = 0;\n  this.sum = 0;\n  this.average = 0.0;\n};\n\n;\n/*\n    can't extend from both FixedSizeList and VariableSizeList, so exporting compositor\n*/\n\nvar createTable = function createTable(BaseClass, constructorCallback) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_temp, _BaseClass);\n\n    var _super = _createSuper(_temp);\n\n    var _proto = _temp.prototype;\n\n    /*\n        We do not want to recalculate totals too often, so caching them in object by column dataKey\n    */\n\n    /*\n        TODO:\n            make this call throttled\n    */\n    _proto.refreshTotalsForColumnRaw = function refreshTotalsForColumnRaw(dataKey, cellDataGetter) {\n      var curTotals = this.totals && this.totals[dataKey];\n\n      if (curTotals) {\n        var curCachePart = this.totalsCache[dataKey];\n\n        if (!curCachePart) {\n          curCachePart = this.totalsCache[dataKey] = new TotalsCachePart();\n        }\n\n        for (var j = 0, totalType, oldVal, newVal, tmpSum; j < curTotals.length; j++) {\n          totalType = curTotals[j];\n          oldVal = curCachePart[totalType];\n\n          switch (totalType) {\n            case \"count\":\n              newVal = this.totalRows;\n              break;\n\n            case \"sum\":\n            case \"average\":\n              if (tmpSum === undefined) {\n                tmpSum = reduceRange(this.totalRows, dataKey, this.rowDataGetter, cellDataGetter, 0, add);\n              }\n\n              newVal = totalType === \"sum\" ? tmpSum : tmpSum / this.totalRows;\n              break;\n\n            case \"min\":\n            case \"max\":\n              newVal = reduceRange(this.totalRows, dataKey, this.rowDataGetter, cellDataGetter, totalType === \"min\" ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER, Math[totalType]);\n              break;\n\n            default:\n              if (process.env.NODE_ENV !== \"production\") {\n                throw new Error(\"Wrong total type: \" + totalType);\n              }\n\n          }\n\n          if (oldVal !== newVal) {\n            curCachePart[totalType] = newVal;\n            this.emit(\"totals-calculated\");\n          }\n        }\n      } else if (process.env.NODE_ENV !== \"production\") {\n        console.log(\"Asked to recalculate totals for: \" + dataKey + \"; doing nothing;\");\n      }\n\n      return this;\n    };\n\n    _proto.refreshTotalsForColumn = function refreshTotalsForColumn(dataKey) {\n      var col = this.columns.find(function (c) {\n        return c.dataKey === dataKey;\n      });\n\n      if (col) {\n        this.refreshTotalsForColumnRaw(dataKey, col.getCellData);\n      }\n\n      return this;\n    };\n\n    _proto.setSortParams = function setSortParams(colIndex, sortDirectionSign) {\n      if (this.sortColumnIndex !== colIndex || sortDirectionSign !== this.sortDirectionSign) {\n        this.sortColumnIndex = colIndex;\n        this.sortDirectionSign = sortDirectionSign;\n        this.emit(\"sort-params-changed\");\n      }\n    };\n\n    _proto.refreshRowsOrder = function refreshRowsOrder() {\n      if (this.orderedRows.length !== this.totalRows) {\n        var rows = this.orderedRows = new OrderedRowsCache(this.totalRows);\n\n        for (var j = 1; j < rows.length; j++) {\n          rows[j] = j;\n        }\n      }\n\n      return this;\n    };\n\n    _proto.resetColumnWidthsCache = function resetColumnWidthsCache() {\n      this.tbodyColumnWidths = new TbodyColumnWidthsCache(this.columns.length);\n    };\n\n    function _temp() {\n      var _this;\n\n      _this = _BaseClass.call(this) || this;\n      _this.columns = [];\n      _this.totals = {};\n      _this.headlessMode = false;\n      _this.sortColumnIndex = -1;\n      _this.sortDirectionSign = 1;\n      _this.scrollLeft = 0;\n      _this.tbodyColumnWidths = null;\n      _this.orderedRows = new OrderedRowsCache(0);\n      _this.totalsCache = Object.create(null);\n      _this.refreshTotals = debounce(function () {\n        for (var j = 0, dataKey, getCellData; j < _this.columns.length; j++) {\n          var _this$columns$j = _this.columns[j];\n          dataKey = _this$columns$j.dataKey;\n          getCellData = _this$columns$j.getCellData;\n\n          _this.refreshTotalsForColumnRaw(dataKey, getCellData);\n        }\n\n        return _assertThisInitialized(_this);\n      }, 100);\n      _this.refreshSorting = debounce(function () {\n        if (_this.sortColumnIndex > -1 && _this.totalRows > 0) {\n          var _this$columns$_this$s = _this.columns[_this.sortColumnIndex],\n              sort = _this$columns$_this$s.sort,\n              dataKey = _this$columns$_this$s.dataKey,\n              getCellData = _this$columns$_this$s.getCellData;\n\n          if (sort) {\n            var sorter = getSorter(_this.rowDataGetter, dataKey, sort, getCellData, _this.sortDirectionSign);\n\n            _this.orderedRows.sort(sorter);\n\n            _this.emit(\"#rowsOrder\");\n          }\n        }\n      }, REFRESH_SORT_DEBOUNCE_INTERVAL);\n\n      _this.on(\"#columns\", _this.resetColumnWidthsCache).on(\"#columns\", _this.refreshTotals).on(\"#columns\", _this.refreshSorting).on(\"#totalRows\", _this.refreshRowsOrder).on(\"#totalRows\", _this.refreshSorting).on(\"#totalRows\", _this.refreshTotals).on(\"sort-params-changed\", _this.refreshSorting).on(\"#rowDataGetter\", _this.refreshSorting).on(\"#rowDataGetter\", _this.refreshTotals).on(\"#rowsOrder\", _this.scrollToStart).on(\"#totals\", _this.refreshTotals).refreshRowsOrder();\n\n      if (constructorCallback) {\n        constructorCallback(_assertThisInitialized(_this));\n      }\n\n      return _this;\n    }\n\n    _proto.destructor = function destructor() {\n      this.refreshSorting.cancel();\n      this.refreshTotals.cancel();\n\n      _BaseClass.prototype.destructor.call(this);\n    };\n\n    return _temp;\n  }(BaseClass), _temp;\n};\n\nexport default createTable;","import createTable from \"./createTable\";\nimport FixedSizeList from \"./FixedSizeList\";\nexport default createTable(FixedSizeList);","import createTable from \"./createTable\";\nimport VariableSizeList from \"./VariableSizeList\";\nexport default createTable(VariableSizeList, function (instance) {\n  instance.prependListener(\"#rowsOrder\", instance.resetCache);\n});","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var columns = _ref.columns,\n      CellComponent = _ref.CellComponent,\n      getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowDataIndex = _ref.rowDataIndex,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowDataIndex);\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(rowData, rowDataIndex, getRowExtraProps), columns.map(function (column, columnIndex) {\n    if (column.visibility === \"hidden\") {\n      return null;\n    }\n\n    var FinalCellComponent = column.CellComponent || CellComponent;\n    return /*#__PURE__*/React.createElement(FinalCellComponent, {\n      key: column.dataKey,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      column: column,\n      columnIndex: columnIndex,\n      getCellExtraProps: column.getCellExtraProps || getCellExtraProps\n    });\n  }));\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  columns: PropTypes.array.isRequired,\n  CellComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowDataIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\nimport capitalize from \"lodash/capitalize\";\n\nvar TotalsCell = function TotalsCell(_ref) {\n  var cellTotals = _ref.cellTotals,\n      totalsCache = _ref.totalsCache,\n      formatTotal = _ref.formatTotal;\n\n  if (!cellTotals || !totalsCache) {\n    return null;\n  }\n\n  if (cellTotals.length === 1) {\n    var summaryType = cellTotals[0];\n    var res = totalsCache[summaryType];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      title: summaryType\n    }, formatTotal ? formatTotal(res) : res);\n  }\n\n  return cellTotals.map(function (summaryType) {\n    var res = totalsCache[summaryType];\n    return res !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      key: summaryType\n    }, capitalize(summaryType), \":\\xA0\", formatTotal ? formatTotal(res) : res) : null;\n  });\n};\n\nexport default TotalsCell;","import React, { memo } from \"react\";\nimport useApiPlugin from \"../../useApi\";\nvar commonSubscribeEvents = [\"#columns\"];\nvar nonStickySubscribeEvents = commonSubscribeEvents.concat(\"tbody-column-widths-changed\");\n\nvar Colgroup = function Colgroup(_ref) {\n  var useTbodyWidths = _ref.useTbodyWidths;\n\n  var _useApiPlugin = useApiPlugin(useTbodyWidths ? nonStickySubscribeEvents : commonSubscribeEvents),\n      columns = _useApiPlugin.columns,\n      tbodyColumnWidths = _useApiPlugin.tbodyColumnWidths;\n\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, columns.map(function (_ref2, j, cols) {\n    var dataKey = _ref2.dataKey,\n        background = _ref2.background,\n        visibility = _ref2.visibility,\n        border = _ref2.border,\n        width = _ref2.width;\n    return visibility !== \"hidden\" ? /*#__PURE__*/React.createElement(\"col\", {\n      key: dataKey,\n      style: {\n        width: useTbodyWidths ? tbodyColumnWidths[j] : width,\n        background: background,\n        border: border\n      }\n    }) : null;\n  }));\n};\n\nexport default memo(Colgroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport sum from \"lodash/sum\";\nimport useApi from \"../../../useApi\";\nimport Colgroup from \"../../common/Colgroup\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"#scrollLeft\", \"#widgetWidth\", \"tbody-column-widths\"];\n\nvar TableWrapper = function TableWrapper(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      scrollLeft = _useApi.scrollLeft,\n      columns = _useApi.columns,\n      tbodyColumnWidths = _useApi.tbodyColumnWidths;\n\n  var style = {\n    /* If we do this via transform translate, col background would have bugs during horizontal scroll. Strange webkit behavior */\n    marginLeft: -scrollLeft,\n\n    /* TODO: maybe box-sizing:border-box; is needed here? */\n    width: sum(tbodyColumnWidths)\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    style: style,\n    \"aria-colcount\": columns.length\n  }), /*#__PURE__*/React.createElement(Colgroup, {\n    useTbodyWidths: true\n  }), children);\n};\n\nexport default TableWrapper;","import React, { memo } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"sort-params-changed\"];\nvar SortDirections = {\n  \"1\": \"ascending\",\n  \"-1\": \"descending\"\n};\n\nvar HeaderCells = function HeaderCells() {\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      columns = _useApi.columns,\n      sortColumnIndex = _useApi.sortColumnIndex,\n      sortDirectionSign = _useApi.sortDirectionSign;\n\n  return columns.map(function (_ref, j) {\n    var dataKey = _ref.dataKey,\n        title = _ref.title,\n        sort = _ref.sort,\n        label = _ref.label,\n        visibility = _ref.visibility;\n    return visibility === \"hidden\" ? null : /*#__PURE__*/React.createElement(\"th\", {\n      key: dataKey,\n      title: title,\n      \"data-sortable\": sort ? \"\" : undefined,\n      \"aria-colindex\": j + 1,\n      \"aria-sort\": sortColumnIndex !== j ? \"none\" : SortDirections[sortDirectionSign]\n    }, label);\n  });\n};\n\nexport default memo(HeaderCells);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback, memo } from \"react\";\nimport HeaderCells from \"./HeaderCells\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [];\n\nvar Thead = function Thead(_ref) {\n  var trRef = _ref.trRef,\n      getCellStyle = _ref.getCellStyle,\n      props = _objectWithoutPropertiesLoose(_ref, [\"trRef\", \"getCellStyle\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var clickHandler = useCallback(function (e) {\n    var colIndex = parseInt(e.target.getAttribute(\"aria-colindex\"), 10) - 1;\n\n    if (process.env.NODE_ENV !== \"production\" && Number.isNaN(colIndex)) {\n      throw new Error(\"colIndex attr missing\");\n    }\n\n    if (API.columns[colIndex].sort) {\n      var directionSign = e.target.getAttribute(\"aria-sort\") === \"ascending\" ? -1 : 1;\n      API.setSortParams(colIndex, directionSign);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"thead\", _extends({}, props, {\n    onClick: clickHandler\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(HeaderCells, null)));\n};\n\nexport default memo(Thead);","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"#totals\", \"totals-calculated\"];\n\nvar FooterCells = function FooterCells(_ref) {\n  var TotalsCellComponent = _ref.TotalsCellComponent;\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      columns = _useApi.columns,\n      totals = _useApi.totals,\n      totalsCache = _useApi.totalsCache;\n\n  return columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        formatTotal = _ref2.formatTotal,\n        visibility = _ref2.visibility;\n\n    if (visibility === \"hidden\") {\n      return null;\n    }\n\n    var curTotals = totals[dataKey];\n    var curTotalsCache = totalsCache[dataKey];\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: dataKey,\n      \"aria-colindex\": j + 1\n    }, /*#__PURE__*/React.createElement(TotalsCellComponent, {\n      cellTotals: curTotals,\n      totalsCache: curTotalsCache,\n      formatTotal: formatTotal\n    }));\n  });\n};\n\nFooterCells.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  TotalsCellComponent: PropTypes.any.isRequired\n} : {};\nexport default memo(FooterCells);","import React, { memo } from \"react\";\nimport FooterCells from \"./FooterCells\";\n\nvar Tfoot = function Tfoot(_ref) {\n  var className = _ref.className,\n      trRef = _ref.trRef,\n      TotalsCellComponent = _ref.TotalsCellComponent;\n  return /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(FooterCells, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default memo(Tfoot);","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#startIndex\", \"#endIndex\", \"#columns\", \"#rowsOrder\", \"#rowKeyGetter\", \"#rowDataGetter\"];\n\nvar getVisibleRows = function getVisibleRows(orderedRows, rangeFrom, rangeTo, columns, getRowData, getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent) {\n  var result = [];\n\n  for (var rowKey, idx; rangeFrom < rangeTo; rangeFrom++) {\n    idx = orderedRows[rangeFrom];\n    rowKey = getRowKey ? getRowKey(idx) : idx;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      getCellExtraProps: getCellExtraProps,\n      rowIndex: rangeFrom,\n      rowDataIndex: idx,\n      key: rowKey,\n      columns: columns,\n      getRowData: getRowData,\n      CellComponent: CellComponent\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  var API = useApi(SUBSCRIBE_EVENTS);\n  useEffect(function () {\n    API.reportRowsRendered();\n  });\n  return getVisibleRows(API.orderedRows, API.startIndex, API.endIndex, API.columns, API.rowDataGetter, API.rowKeyGetter, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent);\n};\n\nexport default Rows;","import React, { memo } from \"react\";\nimport Rows from \"./Rows\";\n\nvar Tbody = function Tbody(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      tbodyRef = _ref.tbodyRef,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tbodyRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }));\n};\n\nexport default memo(Tbody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#totalRows\", \"#columns\"];\n\nvar BodyTable = function BodyTable(_ref) {\n  var fixedLayout = _ref.fixedLayout,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedLayout\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var tableStyle = {\n    tableLayout: fixedLayout ? \"fixed\" : \"auto\",\n    minWidth: \"100%\"\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    \"aria-rowcount\": API.totalRows,\n    style: tableStyle,\n    \"aria-colcount\": API.columns.length\n  }));\n};\n\nexport default BodyTable;","import { useRef, useEffect } from \"react\";\nimport resizeObserverOptions from \"../../../constants/resizeObserverOptions\";\n\nvar useColWidthsResizeObserver = function useColWidthsResizeObserver(API) {\n  var observerRef = useRef();\n  var trRef = useRef();\n  var O = observerRef.current;\n\n  if (!O) {\n    O = observerRef.current = new ResizeObserver(function (entries) {\n      for (var j = 0, colIndex; j < entries.length; j++) {\n        var _entries$j = entries[j],\n            target = _entries$j.target,\n            contentRect = _entries$j.contentRect;\n        colIndex = parseInt(target.getAttribute(\"aria-colindex\"));\n        API.tbodyColumnWidths[colIndex - 1] = Math.round(contentRect.width);\n      }\n\n      API.emit(\"tbody-column-widths-changed\");\n    });\n  }\n\n  useEffect(function () {\n    if (trRef.current) {\n      for (var node = trRef.current.firstElementChild; node; node = node.nextElementSibling) {\n        O.observe(node, resizeObserverOptions);\n      }\n\n      return function () {\n        O.disconnect();\n      };\n    }\n  }, [trRef.current]);\n  return trRef;\n};\n\nexport default useColWidthsResizeObserver;","import React from \"react\";\nimport Scroller from \"../../common/Scroller\";\n/*\n    According to specs, tr must always be inside tbody, thead or tfoot                \n*/\n\nvar TbodyScroller = function TbodyScroller() {\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"tr\"\n  }));\n};\n\nexport default TbodyScroller;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nimport TableWrapper from \"./TableWrapper\";\nimport Thead from \"../common/Thead\";\nimport Tfoot from \"../common/Tfoot\";\nimport Tbody from \"../common/Tbody\";\nimport BodyTable from \"../common/BodyTable\";\nimport useColWidthsResizeObserver from \"./useColWidthsResizeObserver\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport cx from \"../../utils/cx\";\nvar subscribeEvents = [\"#headlessMode\", \"#totals\"];\n\nvar NonSticky = function NonSticky(_ref) {\n  var className = _ref.className,\n      tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      fixedLayout = _ref.fixedLayout,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"fixedLayout\", \"onScroll\"]);\n\n  var API = useApi(subscribeEvents);\n  var headlessMode = API.headlessMode,\n      totals = API.totals;\n  /*\n      Hidden tfoot & thead are needed to 'hold' widths of tbody columns no to be narrower than real thead/tfoot\n      and notify model about columns width changes.\n      There are 3 tables rendered in this mode, so their column widths need to be synced somehow.\n  */\n\n  var widthsObserverRef = useColWidthsResizeObserver(API);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (headlessMode && !totals) {\n      console.warn(\"NonSticky table is rendered without headers and footers. This is not ok.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-nonst\", className)\n  }, props), headlessMode ? null : /*#__PURE__*/React.createElement(TableWrapper, {\n    className: \"afvscr-nonst-subtable\"\n  }, /*#__PURE__*/React.createElement(Thead, null)), /*#__PURE__*/React.createElement(ScrollContainer, {\n    ref: scrollContainerRef,\n    onScroll: onScroll,\n    reportScrollLeft: true\n  }, useMemo(function () {\n    return /*#__PURE__*/React.createElement(BodyTable, {\n      fixedLayout: fixedLayout\n    }, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, {\n      className: \"afvscr-hdnwrp\",\n      trRef: widthsObserverRef\n    }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n      TotalsCellComponent: TotalsCellComponent,\n      className: \"afvscr-hdnwrp\",\n      trRef: headlessMode ? widthsObserverRef : undefined\n    }), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n      tbodyRef: tbodyRef,\n      getRowExtraProps: getRowExtraProps,\n      getCellExtraProps: getCellExtraProps,\n      RowComponent: RowComponent,\n      CellComponent: CellComponent\n    }));\n  }, [totals, headlessMode, fixedLayout, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent, TotalsCellComponent])), totals && /*#__PURE__*/React.createElement(TableWrapper, {\n    className: \"afvscr-nonst-subtable\"\n  }, /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default memo(NonSticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useMemo, useEffect } from \"react\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport Thead from \"../common/Thead\";\nimport Tbody from \"../common/Tbody\";\nimport Tfoot from \"../common/Tfoot\";\nimport BodyTable from \"../common/BodyTable\";\nimport useApi from \"../../useApi\";\nimport cx from \"../../utils/cx\";\nvar SUBSCRIBE_EVENTS = [\"#headlessMode\", \"#totals\"];\n/*\n    Todo:\n        measure thead & tfoot heights in order to properly calculate available space for rows\n*/\n\nvar Sticky = function Sticky(_ref) {\n  var tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      fixedLayout = _ref.fixedLayout,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"fixedLayout\", \"className\"]);\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      headlessMode = _useApi.headlessMode,\n      totals = _useApi.totals;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    /*\n        https://bugs.chromium.org/p/chromium/issues/detail?id=702927\n    */\n    var areTotalsPresent = totals && totals.length !== 0;\n    useEffect(function () {\n      if (!headlessMode || areTotalsPresent) {\n        var table = scrollContainerRef.current.querySelector(\"table\");\n        var tableStyle = getComputedStyle(table);\n\n        if (tableStyle.borderCollapse === \"collapse\") {\n          console.warn(\"You use sticky table version. Due to special border behavior when scrolling, use border-collpase: separate.%o\", \"https://bugs.chromium.org/p/chromium/issues/detail?id=702927\");\n        }\n      }\n    }, [headlessMode, areTotalsPresent]);\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    ref: scrollContainerRef,\n    reportScrollLeft: true,\n    className: cx(\"afvscr-st\", className)\n  }, props), useMemo(function () {\n    return /*#__PURE__*/React.createElement(BodyTable, {\n      fixedLayout: fixedLayout\n    }, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, null), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n      tbodyRef: tbodyRef,\n      getRowExtraProps: getRowExtraProps,\n      getCellExtraProps: getCellExtraProps,\n      RowComponent: RowComponent,\n      CellComponent: CellComponent\n    }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n      TotalsCellComponent: TotalsCellComponent\n    }));\n  }, [headlessMode, fixedLayout, totals, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent, TotalsCellComponent]));\n};\n\nexport default memo(Sticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isPositionStickySupported from \"../utils/isPositionStickySupported\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport FixedSizeTableStore from \"../models/FixedSizeTable\";\nimport VariableSizeTableStore from \"../models/VariableSizeTable\";\nimport RowComponentDefault from \"./common/Row\";\nimport CellComponentDefault from \"./common/Cell\";\nimport TotalsCellComponentDefault from \"./common/TotalsCell\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport NonStickyComponent from \"./NonSticky\";\nimport StickyComponent from \"./Sticky\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar Table = function Table(_ref) {\n  var fixedSize = _ref.fixedSize,\n      columns = _ref.columns,\n      totals = _ref.totals,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      headless = _ref.headless,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      dataRef = _ref.dataRef,\n      useStickyIfPossible = _ref.useStickyIfPossible,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"columns\", \"totals\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"getCellExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"headless\", \"RowCountWarningContainer\", \"dataRef\", \"useStickyIfPossible\", \"className\"]);\n\n  var scrollContainerRef = useRef();\n  var tbodyRef = useRef();\n  var Store = useStore(fixedSize ? FixedSizeTableStore : VariableSizeTableStore, dataRef);\n  useEffect(function () {\n    Store.merge({\n      headlessMode: headless,\n      rowDataGetter: getRowData,\n      rowKeyGetter: getRowKey,\n      overscanRowsCount: overscanRowsCount,\n      totals: totals,\n      columns: columns,\n      totalRows: Math.max(rowCount, 0),\n      rowsContainerNode: tbodyRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    });\n  });\n  /*\n      Only cells inside thead/tfoot can be sticky.\n      If thead/tfoot are hidden - we can easily render lighter StickyComponent to avoid extra wrappers\n  */\n\n  var ComponentVariant = headless && !totals || useStickyIfPossible && isPositionStickySupported() ? StickyComponent : NonStickyComponent;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ComponentVariant, _extends({\n    className: cx(\"afvscr-table-wrapper\", className),\n    scrollContainerRef: scrollContainerRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    tbodyRef: tbodyRef\n  }, props)) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    // unique key for column\n    dataKey: PropTypes.string.isRequired,\n    // If rowData is available, cellData goes through flow, where each fn is optional: render(format((getCellData(rowData,rowIndex))),rowData)\n    // If not, it goes through flow: getEmptyCellData(rowIndex, column).\n    getCellData: PropTypes.func,\n    getEmptyCellData: PropTypes.func,\n    format: PropTypes.func,\n    formatTotal: PropTypes.func,\n    visibility: PropTypes.oneOf([\"visible\", \"hidden\"]),\n    sort: PropTypes.oneOf([\"locale\", \"numeric\"]),\n    // column props, affecting colgroup > col tags\n    background: PropTypes.string,\n    border: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    CellComponent: PropTypes.any,\n    getCellExtraProps: PropTypes.func\n  })).isRequired,\n  getCellExtraProps: PropTypes.func,\n  totals: PropTypes.objectOf( // array may contain: \"sum\", \"average\", \"count\", \"max\", \"min\"\n  PropTypes.array),\n  useStickyIfPossible: PropTypes.bool,\n  headless: PropTypes.bool,\n  HeaderRowComponent: PropTypes.any,\n  CellComponent: PropTypes.any,\n  TotalsCellComponent: PropTypes.any,\n  RowCountWarningContainer: PropTypes.any,\n  rowCountWarningsTable: PropTypes.object,\n  // Determines, if table-layout: fixed is applied to main table\n  fixedLayout: PropTypes.bool\n}) : {};\nTable.defaultProps = Object.assign({}, commonDefaultProps, {\n  fixedLayout: false,\n  headless: false,\n  //    For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n  //    If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n  //    memo(observer(RowComponentDefault)) will do the trick.\n  RowComponent: memo(RowComponentDefault),\n  CellComponent: CellComponentDefault,\n  TotalsCellComponent: TotalsCellComponentDefault,\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default memo(Table);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#startIndex\", \"#endIndex\", \"#rowKeyGetter\", \"#rowDataGetter\"];\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n  var API = useApi(SUBSCRIBE_EVENTS);\n  useEffect(function () {\n    API.reportRowsRendered();\n  });\n  return getVisibleRows(API.startIndex, API.endIndex, API.rowDataGetter, API.rowKeyGetter, getRowExtraProps, RowComponent);\n};\n\nexport default Rows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"RowCountWarningContainer\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var Store = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef);\n  useEffect(function () {\n    Store.merge({\n      rowDataGetter: getRowData,\n      rowKeyGetter: getRowKey,\n      overscanRowsCount: overscanRowsCount,\n      totalRows: rowCount,\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    });\n  });\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  RowCountWarningContainer: PropTypes.any,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n      memo(observer(RowComponentDefault)) will do the trick.\n  */\n  RowComponent: memo(RowComponentDefault),\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default memo(List);"],"sourceRoot":""}