{"version":3,"sources":["webpack:///./lib/useApi/index.js","webpack:///./lib/utils/cx/index.js","webpack:///./lib/utils/debounce/index.js","webpack:///./lib/utils/extraPropsGetters/index.js","webpack:///./lib/Context.js","webpack:///./lib/common/HeightProvider.js","webpack:///./lib/common/ScrollContainer.js","webpack:///./lib/utils/useStore/index.js","webpack:///./lib/models/FixedSizeList.js","webpack:///./lib/models/ListBase.js","webpack:///./lib/models/VariableSizeList.js","webpack:///./lib/common/Scroller.js","webpack:///./lib/commonDefaultProps.js","webpack:///./lib/common/RowCountWarningContainer.js","webpack:///./lib/Table/common/Cell.js","webpack:///./lib/utils/isPositionStickySupported/index.js","webpack:///./lib/utils/math/index.js","webpack:///./lib/models/createTable.js","webpack:///./lib/models/FixedSizeTable.js","webpack:///./lib/models/VariableSizeTable.js","webpack:///./lib/Table/common/Row.js","webpack:///./lib/Table/common/TotalsCell.js","webpack:///./lib/Table/common/Colgroup.js","webpack:///./lib/Table/NonSticky/TableWrapper/index.js","webpack:///./lib/Table/common/HeaderCells.js","webpack:///./lib/Table/common/Thead.js","webpack:///./lib/Table/common/FooterCells.js","webpack:///./lib/Table/common/Tfoot.js","webpack:///./lib/Table/common/Rows.js","webpack:///./lib/Table/common/Tbody.js","webpack:///./lib/Table/common/BodyTable.js","webpack:///./lib/Table/NonSticky/useColWidthsResizeObserver/index.js","webpack:///./lib/Table/common/TbodyScroller.js","webpack:///./lib/Table/NonSticky/index.js","webpack:///./lib/Table/Sticky/index.js","webpack:///./lib/Table/index.js","webpack:///./lib/List/common/Row.js","webpack:///./lib/List/common/Rows.js","webpack:///./lib/List/index.js"],"names":["reducer","x","useApi","subscribeEvents","API","useContext","Context","up","useReducer","useLayoutEffect","j","length","on","_j","off","cx","baseClass","extraClass","debounce","fn","delay","maxWait","timerId","lastInvokeStamp","invoke","context","stamp","call","undefined","cancelPendingCall","clearTimeout","resultFn","performance","now","this","setTimeout","cancel","getPropsGetter","propName","data","index","dataIndex","getExtraProps","_props","props","extraProps","Object","assign","getRowProps","getCellProps","createContext","SUBSCRIBE_EVENTS","el","React","createElement","className","memo","style","height","widgetScrollHeight","cloneElement","ScrollContainer","forwardRef","_ref","ref","children","onScroll","reportScrollLeft","_objectWithoutPropertiesLoose","scrollHandler","useCallback","e","_e$target","target","scrollTop","scrollLeft","set","useEffect","current","R","ResizeObserver","entries","_entries$0$target","offsetWidth","offsetHeight","Math","round","observe","unobserve","_extends","tabIndex","HeightProvider","useStore","StoreConstructor","dataRef","finalDataRef","useRef","Store","destructor","FixedSizeList","_ListBase","_inheritsLoose","_proto","prototype","_this","updateWidgetScrollHeight","updateEstimatedRowHeight","estimatedRowHeight","totalRows","node","rowsContainerNode","firstElementChild","getVisibleRangeStart","distance","getDistanceBetweenIndexes","startIndex","endIndex","ListBase","getRowDataInitial","Error","_EventEmitter","virtualTopOffset","overscanRowsCount","widgetHeight","widgetWidth","rowKeyGetter","rowDataGetter","scrollContainerNode","increaseEndIndexIfNeeded","increaseEndIndexIfNeededSync","updateEndIndex","updateStartOffset","paramName","paramValue","emit","merge","params","k","currentVisibleDist","removeAllListeners","_this$getVisibleRange","newVisibleStartIndex","remainder","newStartIndex","max","overscanOffset","newEndIndex","min","scrollToRow","scrollToStart","EventEmitter","SegmentsTreeCache","Uint32Array","VariableSizeList","sTree","N","shouldResetInvisibleRowHeights","setVisibleRowsHeights","setVisibleRowsHeightsSync","prependListener","resetCache","reallocateCacheIfNeeded","markResetInvisibleRowHeights","calculateParentsInRange","i","newHeight","l","r","rowHeightsSum","rowCounter","child","nextElementSibling","parseInt","getAttribute","dist","v","nodeIndex","fill","suggestedN","pow","ceil","log2","res","Component","useApiPlugin","commonDefaultProps","fixedSize","rowCount","RowCountWarningContainer","Cell","rowData","rowIndex","column","columnIndex","getCellExtraProps","render","getEmptyCellData","dataKey","format","getCellData","cellData","propTypes","elStyle","document","cssText","map","p","join","isSupported","position","includes","isPositionStickySupported","add","a","b","subtract","OrderedRowsCache","TbodyColumnWidthsCache","L","Intl","Collator","getValueForSorting","srcVal","fieldName","defaultValue","getRowData","result","reduceRange","startValue","getNewRes","TotalsCachePart","count","sum","average","createTable","BaseClass","constructorCallback","_BaseClass","_temp","columns","totals","headlessMode","sortColumnIndex","sortDirectionSign","tbodyColumnWidthsSum","tbodyColumnWidths","orderedRows","totalsCache","create","refreshTotals","refreshTotalsSync","refreshSorting","_this$columns$_this$s","sort","sorter","method","directionSign","compare","v1","v2","getSorter","resetColumnWidthsCache","refreshRowsOrder","refreshColumnWidthsSum","_assertThisInitialized","refreshTotalsForColumnRaw","cellDataGetter","curTotals","curCachePart","totalType","oldVal","newVal","tmpSum","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","process","refreshTotalsForColumn","col","find","c","_this$columns$j","setSortParams","colIndex","rows","reduce","instance","Row","CellComponent","getRowExtraProps","rowDataIndex","visibility","FinalCellComponent","key","TotalsCell","cellTotals","formatTotal","summaryType","title","commonSubscribeEvents","nonStickySubscribeEvents","concat","useTbodyWidths","_useApiPlugin","_ref2","background","border","width","TableWrapper","_useApi","marginLeft","Colgroup","SortDirections","label","trRef","getCellStyle","clickHandler","onClick","HeaderCells","FooterCells","TotalsCellComponent","curTotalsCache","Rows","RowComponent","rangeFrom","rangeTo","getRowKey","rowKey","idx","push","getVisibleRows","tbodyRef","BodyTable","fixedLayout","tableStyle","tableLayout","minWidth","useColWidthsResizeObserver","observerRef","mutationObserverRef","RO","MO","MutationObserver","_entries$i","addedNodes","removedNodes","disconnect","trNode","childList","TbodyScroller","Scroller","scrollContainerRef","widthsObserverRef","Thead","Tfoot","Tbody","Table","rowCountWarningsTable","headless","nonSticky","FixedSizeTableStore","VariableSizeTableStore","ComponentVariant","StickyComponent","NonStickyComponent","Provider","value","defaultProps","RowComponentDefault","CellComponentDefault","TotalsCellComponentDefault","RowCountWarningContainerDefault","List","_ref$RowComponent","rowsContainerRef","FixedSizeListStore","VariableSizeListStore"],"mappings":"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","file":"This library.8a9fe06bc2f3c386149d.js","sourcesContent":["import { useContext, useLayoutEffect, useReducer } from \"react\";\nimport Context from \"../Context\";\n\nvar reducer = function reducer(x) {\n  return x + 1;\n};\n/*\n\tTODO:\n\t\twhy useEffect does not properly update colgroup of tbody, when rowcount changes from 0 to positive value?\n*/\n\n\nvar useApi = function useApi(subscribeEvents) {\n  var API = useContext(Context);\n\n  var _useReducer = useReducer(reducer, 0),\n      up = _useReducer[1];\n\n  useLayoutEffect(function () {\n    for (var j = 0; j < subscribeEvents.length; j++) {\n      API.on(subscribeEvents[j], up);\n    }\n\n    return function () {\n      for (var _j = 0; _j < subscribeEvents.length; _j++) {\n        API.off(subscribeEvents[_j], up);\n      }\n    };\n  }, subscribeEvents);\n  return API;\n};\n\nexport default useApi;","var cx = function cx(baseClass, extraClass) {\n  return extraClass ? baseClass + \" \" + extraClass : baseClass;\n};\n\nexport default cx;","var debounce = function debounce(fn, delay, maxWait) {\n  var timerId,\n      lastInvokeStamp = -1 * (maxWait || 0);\n\n  var invoke = function invoke(context, stamp) {\n    fn.call(context);\n    lastInvokeStamp = stamp;\n    timerId = undefined;\n  };\n\n  var cancelPendingCall = function cancelPendingCall() {\n    if (timerId) {\n      clearTimeout(timerId);\n      timerId = undefined;\n    }\n  };\n\n  var resultFn = function resultFn() {\n    cancelPendingCall();\n    var stamp = performance.now();\n\n    if (maxWait && stamp - lastInvokeStamp > maxWait) {\n      invoke(this, stamp);\n    } else {\n      timerId = setTimeout(invoke, delay, this, stamp);\n    }\n  };\n\n  resultFn.cancel = cancelPendingCall;\n  return resultFn;\n};\n\nexport default debounce;","var getPropsGetter = function getPropsGetter(propName) {\n  return function (data, index, dataIndex, getExtraProps) {\n    var _props;\n\n    /* avoiding double destructurization via getExtraProps, so making prop object once */\n    var props = (_props = {}, _props[propName] = index + 1, _props);\n\n    if (getExtraProps) {\n      var extraProps = getExtraProps(data, index, dataIndex);\n\n      if (extraProps) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (extraProps.hasOwnProperty(propName)) {\n            throw new Error(\"getExtraProps must not override \" + propName);\n          }\n        }\n\n        Object.assign(props, extraProps);\n      }\n    }\n\n    return props;\n  };\n};\n\nexport var getRowProps = getPropsGetter(\"aria-rowindex\");\nexport var getCellProps = getPropsGetter(\"aria-colindex\");","import { createContext } from \"react\";\nexport default createContext();","import React, { cloneElement, memo } from \"react\";\nimport useApi from \"../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#widgetScrollHeight\"];\nvar el = /*#__PURE__*/React.createElement(\"div\", {\n  \"aria-hidden\": \"true\",\n  className: \"afvscr-height-provider\"\n});\n\nvar HeightProvider = function HeightProvider() {\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      height = _useApi.widgetScrollHeight;\n\n  var props = {\n    style: {\n      height: height\n    }\n  };\n  return cloneElement(el, props);\n};\n\nexport default memo(HeightProvider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { forwardRef, useCallback, useEffect } from \"react\";\nimport cx from \"../utils/cx\";\nimport HeightProvider from \"./HeightProvider\";\nimport useApi from \"../useApi\";\nvar SUBSCRIBE_EVENTS = [];\nvar ScrollContainer = forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onScroll = _ref.onScroll,\n      reportScrollLeft = _ref.reportScrollLeft,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"children\", \"onScroll\", \"reportScrollLeft\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var scrollHandler = useCallback(function (e) {\n    var _e$target = e.target,\n        scrollTop = _e$target.scrollTop,\n        scrollLeft = _e$target.scrollLeft;\n    API.set(\"scrollTop\", scrollTop);\n\n    if (reportScrollLeft) {\n      API.set(\"scrollLeft\", scrollLeft);\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [onScroll, reportScrollLeft]);\n  useEffect(function () {\n    var el = ref.current;\n    var R = new ResizeObserver(function (entries) {\n      if (entries.length === 1) {\n        /*\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \n            and { box: border-box } option does not work here\n        */\n        var _entries$0$target = entries[0].target,\n            offsetWidth = _entries$0$target.offsetWidth,\n            offsetHeight = _entries$0$target.offsetHeight;\n        API.set(\"widgetHeight\", Math.round(offsetHeight)).set(\"widgetWidth\", Math.round(offsetWidth));\n      }\n    });\n    R.observe(el);\n    return function () {\n      R.unobserve(el);\n    };\n  }, []);\n  /*\n      tabIndex=\"0\" is for proper keyboard nav\n      https://bugzilla.mozilla.org/show_bug.cgi?id=1346159\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    tabIndex: \"0\",\n    className: cx(\"afvscr-scroll-container\", className),\n    ref: ref,\n    onScroll: scrollHandler\n  }, props), /*#__PURE__*/React.createElement(HeightProvider, null), children);\n});\nexport default ScrollContainer;","import { useRef, useEffect } from \"react\";\n/*\n    dataRef is to call Data methods from outside( Data.scrollTo(), etc. ).\n    As it is not dom-related, I decided to avoid forwardRef\n*/\n\nvar useStore = function useStore(StoreConstructor, dataRef) {\n  var finalDataRef = useRef();\n  var Store = finalDataRef.current;\n\n  if (!Store || !(Store instanceof StoreConstructor)) {\n    Store = finalDataRef.current = new StoreConstructor();\n  }\n\n  if (dataRef) {\n    dataRef.current = Store;\n  }\n\n  useEffect(function () {\n    return function () {\n      Store.destructor();\n    };\n  }, [Store]);\n  return Store;\n};\n\nexport default useStore;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport ListBase from \"./ListBase\";\n\nvar FixedSizeList = /*#__PURE__*/function (_ListBase) {\n  _inheritsLoose(FixedSizeList, _ListBase);\n\n  var _proto = FixedSizeList.prototype;\n\n  _proto.updateWidgetScrollHeight = function updateWidgetScrollHeight() {\n    return this.set(\"widgetScrollHeight\", this.estimatedRowHeight * this.totalRows);\n  };\n\n  _proto.updateEstimatedRowHeight = function updateEstimatedRowHeight() {\n    var node = this.rowsContainerNode;\n\n    if (node) {\n      var firstElementChild = node.firstElementChild;\n\n      if (firstElementChild) {\n        this.set(\"estimatedRowHeight\", node.firstElementChild.offsetHeight);\n      }\n    }\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(distance) {\n    var estimatedRowHeight = this.estimatedRowHeight;\n    return [distance / estimatedRowHeight | 0, distance % estimatedRowHeight];\n  };\n\n  function FixedSizeList() {\n    var _this;\n\n    _this = _ListBase.call(this) || this;\n\n    _this.on(\"#estimatedRowHeight\", _this.updateWidgetScrollHeight).on(\"#widgetWidth\", _this.updateEstimatedRowHeight);\n\n    return _this;\n  }\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    return this.estimatedRowHeight * (endIndex - startIndex);\n  };\n\n  return FixedSizeList;\n}(ListBase);\n\n;\nexport default FixedSizeList;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport EventEmitter from \"af-tools/lib/eventEmitters/Basic\";\nimport debounce from \"../utils/debounce\";\n\nvar getRowDataInitial = function getRowDataInitial() {\n  throw new Error(\"getRowData must be provided\");\n};\n\nvar END_INDEX_CHECK_INTERVAL = 400;\nvar DEFAULT_ESTIMATED_ROW_HEIGHT = 16;\n\nvar ListBase = /*#__PURE__*/function (_EventEmitter) {\n  _inheritsLoose(ListBase, _EventEmitter);\n\n  var _proto = ListBase.prototype;\n\n  _proto.set = function set(paramName, paramValue) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!this.hasOwnProperty(paramName)) {\n        throw new Error(\"Trying to merge key, which does not exist: \" + paramName);\n      }\n    }\n\n    if (this[paramName] !== paramValue) {\n      this[paramName] = paramValue;\n      this.emit(\"#\" + paramName);\n    }\n\n    return this;\n  };\n\n  _proto.merge = function merge(params) {\n    for (var k in params) {\n      this.set(k, params[k]);\n    }\n\n    return this;\n  };\n\n  function ListBase() {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    _this.totalRows = 0;\n    _this.startIndex = 0;\n    _this.endIndex = 0;\n    _this.virtualTopOffset = 0;\n    _this.widgetScrollHeight = 0;\n    _this.overscanRowsCount = 0;\n    _this.estimatedRowHeight = DEFAULT_ESTIMATED_ROW_HEIGHT;\n    _this.scrollTop = 0;\n    _this.widgetHeight = 0;\n    _this.widgetWidth = 0;\n    _this.rowKeyGetter = undefined;\n    _this.rowDataGetter = getRowDataInitial;\n    _this.rowsContainerNode = null;\n    _this.scrollContainerNode = null;\n    _this.increaseEndIndexIfNeeded = debounce(_this.increaseEndIndexIfNeededSync, END_INDEX_CHECK_INTERVAL);\n\n    if (process.env.NODE_ENV !== \"production\") {\n      var absentMethods = [\"updateWidgetScrollHeight\", \"getDistanceBetweenIndexes\", \"getVisibleRangeStart\"].filter(function (fn) {\n        return !_this[fn];\n      });\n\n      if (absentMethods.length) {\n        throw new Error(\"Absent methods: \" + absentMethods.join(\",\"));\n      }\n    }\n\n    _this.on(\"#totalRows\", _this.updateWidgetScrollHeight).on(\"#totalRows\", _this.updateEndIndex).on(\"#widgetScrollHeight\", _this.increaseEndIndexIfNeeded).on(\"#endIndex\", _this.increaseEndIndexIfNeeded.cancel).on(\"#scrollTop\", _this.updateStartOffset).on(\"#overscanRowsCount\", _this.updateStartOffset).on(\"#widgetHeight\", _this.updateEndIndex).on(\"#startIndex\", _this.updateEndIndex);\n\n    return _this;\n  }\n  /*\n      Column heights may change during scroll/width-change\n  */\n\n\n  _proto.increaseEndIndexIfNeededSync = function increaseEndIndexIfNeededSync() {\n    var currentVisibleDist = this.getDistanceBetweenIndexes(this.startIndex, this.endIndex);\n\n    if (this.widgetHeight > this.virtualTopOffset + currentVisibleDist - this.scrollTop) {\n      this.updateEndIndex();\n    }\n  };\n\n  _proto.destructor = function destructor() {\n    this.increaseEndIndexIfNeeded.cancel();\n    this.removeAllListeners();\n  };\n\n  _proto.updateStartOffset = function updateStartOffset() {\n    var scrollTop = this.scrollTop,\n        overscanRowsCount = this.overscanRowsCount;\n\n    var _this$getVisibleRange = this.getVisibleRangeStart(scrollTop),\n        newVisibleStartIndex = _this$getVisibleRange[0],\n        remainder = _this$getVisibleRange[1];\n\n    var newStartIndex = Math.max(0, newVisibleStartIndex - overscanRowsCount);\n    var overscanOffset = this.getDistanceBetweenIndexes(newStartIndex, newVisibleStartIndex);\n    return this.set(\"virtualTopOffset\", scrollTop - remainder - overscanOffset).set(\"startIndex\", newStartIndex);\n  };\n\n  _proto.updateEndIndex = function updateEndIndex() {\n    var _this$getVisibleRange2 = this.getVisibleRangeStart(this.scrollTop + this.widgetHeight),\n        newEndIndex = _this$getVisibleRange2[0];\n    /*\n        getVisibleRangeStart works by \"strict less\" algo. It is good for startIndex,\n        but for endIndex we need \"<=\", so adding 1 artificially.\n    */\n\n\n    return this.set(\"endIndex\", Math.min(newEndIndex + 1 + this.overscanRowsCount, this.totalRows));\n  };\n\n  _proto.scrollToRow = function scrollToRow(index) {\n    var node = this.scrollContainerNode;\n\n    if (node) {\n      index = Math.max(0, Math.min(index, this.totalRows));\n      node.scrollTop = this.getDistanceBetweenIndexes(0, index);\n    }\n\n    return this;\n  };\n\n  _proto.scrollToStart = function scrollToStart() {\n    return this.scrollToRow(0);\n  };\n\n  return ListBase;\n}(EventEmitter);\n\n;\nexport default ListBase;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport ListBase from \"./ListBase\";\nimport debounce from \"../utils/debounce\"; // Uint16 cannot be used here, because array stores intermediate sums, which can be huge.\n\nvar SegmentsTreeCache = Uint32Array;\n/*\n    This constant is used for 2 reasons:\n        * Math.log2( 1 ) is 0, which is not correct for cache size calculation\n        * We should always have some extra space for new rows. We do not want to reallocate cache every time.\n*/\n\nvar MIN_TREE_CACHE_OFFSET = 32;\nvar ROW_MEASUREMENT_DEBOUNCE_INTERVAL = 150;\nvar ROW_MEASUREMENT_DEBOUNCE_MAXWAIT = 1000;\n\nvar VariableSizeList = /*#__PURE__*/function (_ListBase) {\n  _inheritsLoose(VariableSizeList, _ListBase);\n\n  var _proto = VariableSizeList.prototype;\n\n  /*\n      Two vars for non-recursive segments tree;\n      Could just make [ 0, 0 ], but want to keep type of heightsCache always of same type.\n  */\n\n  /*\n      When all row heights are different,\n      we must \"predict\" them on the left of startIndex and on the right of endIndex(where they are invisible),\n      basing on what we know: heights between startIndex and endIndex.\n      Using simple average by default.\n  */\n  _proto.markResetInvisibleRowHeights = function markResetInvisibleRowHeights() {\n    this.shouldResetInvisibleRowHeights = true;\n  };\n\n  _proto.updateWidgetScrollHeight = function updateWidgetScrollHeight() {\n    /* In segments tree 1 node is always sum of all elements */\n    return this.set(\"widgetScrollHeight\", this.sTree[1]);\n  };\n\n  _proto.calculateParentsInRange = function calculateParentsInRange(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n\n    for (endIndex += N, startIndex += N; endIndex >>= 1;) {\n      for (var i = startIndex >>= 1; i <= endIndex; i++) {\n        sTree[i] = sTree[i << 1] + sTree[i << 1 | 1];\n      }\n    }\n\n    return this;\n  };\n\n  _proto.setVisibleRowsHeightsSync = function setVisibleRowsHeightsSync() {\n    var node = this.rowsContainerNode;\n\n    if (node) {\n      var sTree = this.sTree,\n          N = this.N;\n      var l = -1,\n          r = -1,\n          rowHeightsSum = 0,\n          rowCounter = 0;\n      /*\n          Some benchmarks inspire me to use nextElementSibling\n          https://jsperf.com/nextsibling-vs-childnodes-increment/2\n      */\n\n      for (var child = node.firstElementChild, newHeight, index; child; child = child.nextElementSibling, rowCounter++) {\n        /*\n            * aria-rowindex is counted from 1 according to w3c spec;\n            * parseInt with radix is 2x faster, then +, -, etc.\n              https://jsperf.com/number-vs-parseint-vs-plus/116\n        */\n        index = parseInt(child.getAttribute(\"aria-rowindex\"), 10) - 1;\n\n        if (process.env.NODE_ENV !== \"production\" && Number.isNaN(index)) {\n          throw new Error(\"aria-rowindex attribute must be present on each row. Look at default Row implementations.\");\n        }\n\n        newHeight = child.offsetHeight;\n        rowHeightsSum += newHeight;\n\n        if (sTree[N + index] !== newHeight) {\n          // console.log( \"%d| was: %d; is: %d\", index, sTree[N+index],newHeight)\n          sTree[N + index] = newHeight;\n\n          if (l === -1) {\n            l = index;\n          }\n\n          r = index;\n        }\n      }\n\n      if (l !== -1) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.log(\"Updating heights in range: %d - %d\", l, r);\n        }\n\n        if (this.shouldResetInvisibleRowHeights) {\n          this.set(\"estimatedRowHeight\", Math.round(rowHeightsSum / rowCounter));\n          this.shouldResetInvisibleRowHeights = false;\n        } else {\n          this.calculateParentsInRange(l, r).updateWidgetScrollHeight();\n        }\n      }\n    }\n\n    return this;\n  };\n\n  _proto.getVisibleRangeStart = function getVisibleRangeStart(dist) {\n    var sTree = this.sTree,\n        N = this.N;\n    var nodeIndex = 1,\n        v;\n\n    while (nodeIndex < N) {\n      v = sTree[nodeIndex <<= 1];\n\n      if (dist >= v) {\n        dist -= v;\n        nodeIndex |= 1;\n      }\n    }\n\n    return [nodeIndex - N, dist];\n  };\n\n  _proto.resetCache = function resetCache() {\n    var sTree = this.sTree,\n        estimatedRowHeight = this.estimatedRowHeight,\n        N = this.N,\n        totalRows = this.totalRows;\n    sTree.fill(estimatedRowHeight, N, N + totalRows);\n    /*\n        Trees are not always ideally allocated, gaps are possible.\n        Classical way for calculating parents is much simpler,\n        but can do much more work(summing zeros) in such conditions. Commented classic algo:\n             for( let i = N + totalRows >> 1, j; i > 0; --i ){\n            j = i << 1;\n            sTree[ i ] = sTree[ j ] + sTree[ j | 1 ];\n        }\n    */\n\n    return this.calculateParentsInRange(0, totalRows);\n  };\n\n  _proto.reallocateCacheIfNeeded = function reallocateCacheIfNeeded() {\n    var suggestedN = this.totalRows ? Math.pow(2, Math.ceil(Math.log2(this.totalRows + MIN_TREE_CACHE_OFFSET))) : 1;\n\n    if (this.N !== suggestedN) {\n      this.N = suggestedN;\n      this.sTree = new SegmentsTreeCache(suggestedN * 2);\n    }\n\n    return this;\n  };\n\n  function VariableSizeList() {\n    var _this;\n\n    _this = _ListBase.call(this) || this;\n    _this.sTree = new SegmentsTreeCache(2);\n    _this.N = 1;\n    _this.shouldResetInvisibleRowHeights = true;\n    _this.setVisibleRowsHeights = debounce(_this.setVisibleRowsHeightsSync, ROW_MEASUREMENT_DEBOUNCE_INTERVAL, ROW_MEASUREMENT_DEBOUNCE_MAXWAIT);\n\n    _this.prependListener(\"#totalRows\", _this.resetCache).prependListener(\"#totalRows\", _this.reallocateCacheIfNeeded).on(\"#estimatedRowHeight\", _this.resetCache).on(\"#estimatedRowHeight\", _this.updateWidgetScrollHeight).on(\"rows-rendered\", _this.setVisibleRowsHeights).on(\"#widgetWidth\", _this.markResetInvisibleRowHeights).on(\"#widgetWidth\", _this.setVisibleRowsHeights);\n\n    return _this;\n  }\n\n  _proto.destructor = function destructor() {\n    this.setVisibleRowsHeights.cancel();\n\n    _ListBase.prototype.destructor.call(this);\n  };\n\n  _proto.getDistanceBetweenIndexes = function getDistanceBetweenIndexes(startIndex, endIndex) {\n    var sTree = this.sTree,\n        N = this.N;\n    var res = 0;\n\n    for (startIndex += N, endIndex += N; startIndex < endIndex; startIndex >>= 1, endIndex >>= 1) {\n      if (startIndex & 1) {\n        res += sTree[startIndex++];\n      }\n\n      if (endIndex & 1) {\n        res += sTree[--endIndex];\n      }\n    }\n\n    ;\n    return res;\n  };\n\n  return VariableSizeList;\n}(ListBase);\n\n;\nexport default VariableSizeList;","import React, { memo } from \"react\";\nimport useApiPlugin from \"../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#virtualTopOffset\"];\n\nvar Scroller = function Scroller(_ref) {\n  var Component = _ref.Component;\n\n  var _useApiPlugin = useApiPlugin(SUBSCRIBE_EVENTS),\n      virtualTopOffset = _useApiPlugin.virtualTopOffset;\n  /*\n      Hmm, I can't put here more than ~ 3 000 000. Maybe need to put one more row in case this height is > 3 000 000\n  */\n\n\n  return /*#__PURE__*/React.createElement(Component, {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\",\n    style: {\n      height: virtualTopOffset\n    }\n  });\n};\n\nexport default memo(Scroller);","var commonDefaultProps = {\n  fixedSize: false,\n  rowCount: 0,\n  overscanRowsCount: 4\n};\nexport default commonDefaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport cx from \"../utils/cx\";\n\nvar RowCountWarningContainer = function RowCountWarningContainer(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-row-count-warning-container\", className)\n  }, props));\n};\n\nexport default RowCountWarningContainer;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCellProps } from \"../../utils/extraPropsGetters\";\n/*\n    If all cells in a row would be completely empty - row can \"collapse\" short.\n    To prevent it we can fill it with &nbsp;\n*/\n\nvar DEFAULT_EMPTY_CELL_CONTENT = \"\\xA0\";\n\nvar Cell = function Cell(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      column = _ref.column,\n      columnIndex = _ref.columnIndex,\n      getCellExtraProps = _ref.getCellExtraProps;\n  var render = column.render,\n      getEmptyCellData = column.getEmptyCellData,\n      dataKey = column.dataKey,\n      format = column.format,\n      getCellData = column.getCellData;\n  var cellData = rowData && (getCellData ? getCellData(rowData, rowIndex) : rowData[dataKey]);\n\n  if (cellData === undefined || cellData === \"\") {\n    cellData = getEmptyCellData ? getEmptyCellData(rowIndex, column) : DEFAULT_EMPTY_CELL_CONTENT;\n  } else {\n    if (format) {\n      cellData = format(cellData, rowData);\n    }\n\n    if (render) {\n      cellData = render(cellData, rowData, column);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", getCellProps(rowData, columnIndex, columnIndex, getCellExtraProps), cellData);\n};\n\nCell.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  rowIndex: PropTypes.number.isRequired,\n  columnIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  rowData: PropTypes.object,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Cell;","var elStyle = document.createElement(\"a\").style;\nelStyle.cssText = [\"\", \"-webkit-\", \"-ms-\"].map(function (p) {\n  return \"position:\" + p + \"sticky\";\n}).join(\";\");\nvar isSupported = elStyle.position.includes(\"sticky\");\n\nvar isPositionStickySupported = function isPositionStickySupported() {\n  return isSupported;\n};\n\nexport default isPositionStickySupported;","export var add = function add(a, b) {\n  return a + b;\n};\nexport var subtract = function subtract(a, b) {\n  return a - b;\n};","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport debounce from \"../utils/debounce\";\nimport { add, subtract } from \"../utils/math\";\nvar OrderedRowsCache = Uint32Array;\nvar TbodyColumnWidthsCache = Uint32Array;\nvar REFRESH_SORT_DEBOUNCE_INTERVAL = 500;\nvar L = new Intl.Collator();\n\nvar getValueForSorting = function getValueForSorting(srcVal, rowIndex, fieldName, defaultValue, getRowData, getCellData) {\n  var result = getRowData(srcVal);\n\n  if (result) {\n    return getCellData ? getCellData(result, rowIndex) : result[fieldName];\n  }\n\n  return defaultValue;\n};\n\nvar getSorter = function getSorter(getRowData, fieldName, method, getCellData, directionSign) {\n  var fn = method === \"locale\" ? L.compare : subtract;\n  var defaultValue = method === \"locale\" ? \"\" : 0;\n  return function (a, b, i) {\n    var v1 = getValueForSorting(a, i, fieldName, defaultValue, getRowData, getCellData);\n    var v2 = getValueForSorting(b, i, fieldName, defaultValue, getRowData, getCellData);\n    return fn(v1, v2) * directionSign;\n  };\n};\n\nvar reduceRange = function reduceRange(totalRows, dataKey, getRowData, getCellData, startValue, getNewRes) {\n  var res = startValue;\n\n  for (var i = 0, rowData, cellData; i < totalRows; i++) {\n    rowData = getRowData(i);\n    cellData = getCellData ? getCellData(rowData, i) : rowData[dataKey];\n    res = getNewRes(res, cellData);\n  }\n\n  return res;\n};\n/*\n    We could use simple object literal,\n    but constructors with stable-order this initialization enforce \"hidden-classes\" v8 optimization\n*/\n\n\nvar TotalsCachePart = function TotalsCachePart() {\n  this.count = 0;\n  this.sum = 0;\n  this.average = 0.0;\n};\n\n;\n/*\n    can't extend from both FixedSizeList and VariableSizeList, so exporting compositor\n*/\n\nvar createTable = function createTable(BaseClass, constructorCallback) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_BaseClass) {\n    _inheritsLoose(_temp, _BaseClass);\n\n    var _proto = _temp.prototype;\n\n    /*\n        We do not want to recalculate totals too often, so caching them in object by column dataKey\n    */\n\n    /*\n        TODO:\n            make this call throttled\n    */\n    _proto.refreshTotalsForColumnRaw = function refreshTotalsForColumnRaw(dataKey, cellDataGetter) {\n      var curTotals = this.totals && this.totals[dataKey];\n\n      if (curTotals) {\n        var curCachePart = this.totalsCache[dataKey];\n\n        if (!curCachePart) {\n          curCachePart = this.totalsCache[dataKey] = new TotalsCachePart();\n        }\n\n        for (var j = 0, totalType, oldVal, newVal, tmpSum; j < curTotals.length; j++) {\n          totalType = curTotals[j];\n          oldVal = curCachePart[totalType];\n\n          switch (totalType) {\n            case \"count\":\n              newVal = this.totalRows;\n              break;\n\n            case \"sum\":\n            case \"average\":\n              if (tmpSum === undefined) {\n                tmpSum = reduceRange(this.totalRows, dataKey, this.rowDataGetter, cellDataGetter, 0, add);\n              }\n\n              newVal = totalType === \"sum\" ? tmpSum : tmpSum / this.totalRows;\n              break;\n\n            case \"min\":\n            case \"max\":\n              newVal = reduceRange(this.totalRows, dataKey, this.rowDataGetter, cellDataGetter, totalType === \"min\" ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER, Math[totalType]);\n              break;\n\n            default:\n              if (process.env.NODE_ENV !== \"production\") {\n                throw new Error(\"Wrong total type: \" + totalType);\n              }\n\n          }\n\n          if (oldVal !== newVal) {\n            curCachePart[totalType] = newVal;\n            this.emit(\"totals-calculated\");\n          }\n        }\n      } else if (process.env.NODE_ENV !== \"production\") {\n        console.log(\"Asked to recalculate totals for: \" + dataKey + \"; doing nothing;\");\n      }\n\n      return this;\n    };\n\n    _proto.refreshTotalsForColumn = function refreshTotalsForColumn(dataKey) {\n      var col = this.columns.find(function (c) {\n        return c.dataKey === dataKey;\n      });\n\n      if (col) {\n        this.refreshTotalsForColumnRaw(dataKey, col.getCellData);\n      }\n\n      return this;\n    };\n\n    _proto.refreshTotalsSync = function refreshTotalsSync() {\n      for (var j = 0, dataKey, getCellData; j < this.columns.length; j++) {\n        var _this$columns$j = this.columns[j];\n        dataKey = _this$columns$j.dataKey;\n        getCellData = _this$columns$j.getCellData;\n        this.refreshTotalsForColumnRaw(dataKey, getCellData);\n      }\n    };\n\n    _proto.setSortParams = function setSortParams(colIndex, sortDirectionSign) {\n      if (this.sortColumnIndex !== colIndex || sortDirectionSign !== this.sortDirectionSign) {\n        this.sortColumnIndex = colIndex;\n        this.sortDirectionSign = sortDirectionSign;\n        this.emit(\"sort-params-changed\");\n      }\n    };\n\n    _proto.refreshRowsOrder = function refreshRowsOrder() {\n      if (this.orderedRows.length !== this.totalRows) {\n        var rows = this.orderedRows = new OrderedRowsCache(this.totalRows);\n\n        for (var j = 1; j < rows.length; j++) {\n          rows[j] = j;\n        }\n      }\n\n      return this;\n    };\n\n    _proto.resetColumnWidthsCache = function resetColumnWidthsCache() {\n      this.tbodyColumnWidths = new TbodyColumnWidthsCache(this.columns.length);\n    };\n\n    _proto.refreshColumnWidthsSum = function refreshColumnWidthsSum() {\n      this.tbodyColumnWidthsSum = this.tbodyColumnWidths.reduce(add);\n    };\n\n    function _temp() {\n      var _this;\n\n      _this = _BaseClass.call(this) || this;\n      _this.columns = [];\n      _this.totals = {};\n      _this.headlessMode = false;\n      _this.sortColumnIndex = -1;\n      _this.sortDirectionSign = 1;\n      _this.scrollLeft = 0;\n      _this.tbodyColumnWidthsSum = 0;\n      _this.tbodyColumnWidths = null;\n      _this.orderedRows = new OrderedRowsCache(0);\n      _this.totalsCache = Object.create(null);\n      _this.refreshTotals = debounce(_this.refreshTotalsSync, 150);\n      _this.refreshSorting = debounce(function () {\n        if (_this.sortColumnIndex > -1 && _this.totalRows > 0) {\n          var _this$columns$_this$s = _this.columns[_this.sortColumnIndex],\n              sort = _this$columns$_this$s.sort,\n              dataKey = _this$columns$_this$s.dataKey,\n              getCellData = _this$columns$_this$s.getCellData;\n\n          if (sort) {\n            var sorter = getSorter(_this.rowDataGetter, dataKey, sort, getCellData, _this.sortDirectionSign);\n\n            _this.orderedRows.sort(sorter);\n\n            _this.emit(\"#rowsOrder\");\n          }\n        }\n      }, REFRESH_SORT_DEBOUNCE_INTERVAL);\n\n      _this.on(\"#columns\", _this.resetColumnWidthsCache).on(\"#columns\", _this.refreshTotals).on(\"#columns\", _this.refreshSorting).on(\"#totalRows\", _this.refreshRowsOrder).on(\"#totalRows\", _this.refreshSorting).on(\"#totalRows\", _this.refreshTotals).on(\"sort-params-changed\", _this.refreshSorting).on(\"#rowDataGetter\", _this.refreshSorting).on(\"#rowDataGetter\", _this.refreshTotals).on(\"#rowsOrder\", _this.scrollToStart).on(\"#totals\", _this.refreshTotals).on(\"tbody-column-widths-changed\", _this.refreshColumnWidthsSum) //for non-sticky\n      .refreshRowsOrder();\n\n      if (constructorCallback) {\n        constructorCallback(_assertThisInitialized(_this));\n      }\n\n      return _this;\n    }\n\n    _proto.destructor = function destructor() {\n      this.refreshSorting.cancel();\n      this.refreshTotals.cancel();\n\n      _BaseClass.prototype.destructor.call(this);\n    };\n\n    return _temp;\n  }(BaseClass), _temp;\n};\n\nexport default createTable;","import createTable from \"./createTable\";\nimport FixedSizeList from \"./FixedSizeList\";\nexport default createTable(FixedSizeList);","import createTable from \"./createTable\";\nimport VariableSizeList from \"./VariableSizeList\";\nexport default createTable(VariableSizeList, function (instance) {\n  instance.prependListener(\"#rowsOrder\", instance.resetCache);\n});","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var columns = _ref.columns,\n      CellComponent = _ref.CellComponent,\n      getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowDataIndex = _ref.rowDataIndex,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowDataIndex);\n  return /*#__PURE__*/React.createElement(\"tr\", getRowProps(rowData, rowIndex, rowDataIndex, getRowExtraProps), columns.map(function (column, columnIndex) {\n    if (column.visibility === \"hidden\") {\n      return null;\n    }\n\n    var FinalCellComponent = column.CellComponent || CellComponent;\n    return /*#__PURE__*/React.createElement(FinalCellComponent, {\n      key: column.dataKey,\n      rowData: rowData,\n      rowIndex: rowIndex,\n      column: column,\n      columnIndex: columnIndex,\n      getCellExtraProps: column.getCellExtraProps || getCellExtraProps\n    });\n  }));\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  columns: PropTypes.array.isRequired,\n  CellComponent: PropTypes.elementType.isRequired,\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  rowDataIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func,\n  getCellExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React from \"react\";\n\nvar TotalsCell = function TotalsCell(_ref) {\n  var cellTotals = _ref.cellTotals,\n      totalsCache = _ref.totalsCache,\n      formatTotal = _ref.formatTotal;\n\n  if (!cellTotals || !totalsCache) {\n    return null;\n  }\n\n  if (cellTotals.length === 1) {\n    var summaryType = cellTotals[0];\n    var res = totalsCache[summaryType];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      title: summaryType,\n      className: \"afvscr-summary\"\n    }, formatTotal ? formatTotal(res) : res);\n  }\n\n  return cellTotals.map(function (summaryType) {\n    var res = totalsCache[summaryType];\n    return res !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      key: summaryType,\n      className: \"afvscr-summary\"\n    }, summaryType, \":\\xA0\", formatTotal ? formatTotal(res) : res) : null;\n  });\n};\n\nexport default TotalsCell;","import React, { memo } from \"react\";\nimport useApiPlugin from \"../../useApi\";\nvar commonSubscribeEvents = [\"#columns\"];\nvar nonStickySubscribeEvents = [].concat(commonSubscribeEvents, [\"tbody-column-widths-changed\"]);\n\nvar Colgroup = function Colgroup(_ref) {\n  var useTbodyWidths = _ref.useTbodyWidths;\n\n  var _useApiPlugin = useApiPlugin(useTbodyWidths ? nonStickySubscribeEvents : commonSubscribeEvents),\n      columns = _useApiPlugin.columns,\n      tbodyColumnWidths = _useApiPlugin.tbodyColumnWidths;\n\n  return /*#__PURE__*/React.createElement(\"colgroup\", null, columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        background = _ref2.background,\n        visibility = _ref2.visibility,\n        border = _ref2.border,\n        width = _ref2.width;\n    return visibility !== \"hidden\" ? /*#__PURE__*/React.createElement(\"col\", {\n      key: dataKey,\n      style: {\n        width: useTbodyWidths ? tbodyColumnWidths[j] : width,\n        background: background,\n        border: border\n      }\n    }) : null;\n  }));\n};\n\nexport default memo(Colgroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport useApi from \"../../../useApi\";\nimport Colgroup from \"../../common/Colgroup\";\nimport cx from \"../../../utils/cx\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"#scrollLeft\", \"#widgetWidth\", \"tbody-column-widths-changed\"];\n\nvar TableWrapper = function TableWrapper(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\"]);\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      scrollLeft = _useApi.scrollLeft,\n      columns = _useApi.columns,\n      tbodyColumnWidthsSum = _useApi.tbodyColumnWidthsSum;\n\n  var style = {\n    /* If we do this via transform translate, col background would have bugs during horizontal scroll. Strange webkit behavior */\n    marginLeft: -scrollLeft,\n    width: tbodyColumnWidthsSum\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: cx(\"afvscr-nonst-subtable\", className)\n  }, props, {\n    style: style,\n    \"aria-colcount\": columns.length\n  }), /*#__PURE__*/React.createElement(Colgroup, {\n    useTbodyWidths: true\n  }), children);\n};\n\nexport default TableWrapper;","import React, { memo } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"sort-params-changed\"];\nvar SortDirections = {\n  \"1\": \"ascending\",\n  \"-1\": \"descending\"\n};\n\nvar HeaderCells = function HeaderCells() {\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      columns = _useApi.columns,\n      sortColumnIndex = _useApi.sortColumnIndex,\n      sortDirectionSign = _useApi.sortDirectionSign;\n\n  return columns.map(function (_ref, j) {\n    var dataKey = _ref.dataKey,\n        title = _ref.title,\n        sort = _ref.sort,\n        label = _ref.label,\n        visibility = _ref.visibility;\n    return visibility === \"hidden\" ? null : /*#__PURE__*/React.createElement(\"th\", {\n      key: dataKey,\n      title: title,\n      \"data-sortable\": sort ? \"\" : undefined,\n      \"aria-colindex\": j + 1,\n      \"aria-sort\": sortColumnIndex !== j ? \"none\" : SortDirections[sortDirectionSign]\n    }, label);\n  });\n};\n\nexport default memo(HeaderCells);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback, memo } from \"react\";\nimport HeaderCells from \"./HeaderCells\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [];\n\nvar Thead = function Thead(_ref) {\n  var trRef = _ref.trRef,\n      getCellStyle = _ref.getCellStyle,\n      props = _objectWithoutPropertiesLoose(_ref, [\"trRef\", \"getCellStyle\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var clickHandler = useCallback(function (e) {\n    var colIndex = parseInt(e.target.getAttribute(\"aria-colindex\"), 10) - 1;\n\n    if (process.env.NODE_ENV !== \"production\" && Number.isNaN(colIndex)) {\n      throw new Error(\"colIndex attr missing\");\n    }\n\n    if (API.columns[colIndex].sort) {\n      var directionSign = e.target.getAttribute(\"aria-sort\") === \"ascending\" ? -1 : 1;\n      API.setSortParams(colIndex, directionSign);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"thead\", _extends({}, props, {\n    onClick: clickHandler\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(HeaderCells, null)));\n};\n\nexport default memo(Thead);","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#columns\", \"#totals\", \"totals-calculated\"];\n\nvar FooterCells = function FooterCells(_ref) {\n  var TotalsCellComponent = _ref.TotalsCellComponent;\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      columns = _useApi.columns,\n      totals = _useApi.totals,\n      totalsCache = _useApi.totalsCache;\n\n  return columns.map(function (_ref2, j) {\n    var dataKey = _ref2.dataKey,\n        formatTotal = _ref2.formatTotal,\n        visibility = _ref2.visibility;\n\n    if (visibility === \"hidden\") {\n      return null;\n    }\n\n    var curTotals = totals[dataKey];\n    var curTotalsCache = totalsCache[dataKey];\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: dataKey,\n      \"aria-colindex\": j + 1\n    }, /*#__PURE__*/React.createElement(TotalsCellComponent, {\n      cellTotals: curTotals,\n      totalsCache: curTotalsCache,\n      formatTotal: formatTotal\n    }));\n  });\n};\n\nFooterCells.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  TotalsCellComponent: PropTypes.elementType.isRequired\n} : {};\nexport default memo(FooterCells);","import React, { memo } from \"react\";\nimport FooterCells from \"./FooterCells\";\n\nvar Tfoot = function Tfoot(_ref) {\n  var className = _ref.className,\n      trRef = _ref.trRef,\n      TotalsCellComponent = _ref.TotalsCellComponent;\n  return /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    ref: trRef\n  }, /*#__PURE__*/React.createElement(FooterCells, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default memo(Tfoot);","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#startIndex\", \"#endIndex\", \"#columns\", \"#rowsOrder\", \"#rowKeyGetter\", \"#rowDataGetter\"];\n\nvar getVisibleRows = function getVisibleRows(orderedRows, rangeFrom, rangeTo, columns, getRowData, getRowKey, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent) {\n  var result = [];\n\n  for (var rowKey, idx; rangeFrom < rangeTo; rangeFrom++) {\n    idx = orderedRows[rangeFrom];\n    rowKey = getRowKey ? getRowKey(idx) : idx;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      getCellExtraProps: getCellExtraProps,\n      rowIndex: rangeFrom,\n      rowDataIndex: idx,\n      key: rowKey,\n      columns: columns,\n      getRowData: getRowData,\n      CellComponent: CellComponent\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  var API = useApi(SUBSCRIBE_EVENTS);\n  useEffect(function () {\n    API.emit(\"rows-rendered\");\n  });\n  return getVisibleRows(API.orderedRows, API.startIndex, API.endIndex, API.columns, API.rowDataGetter, API.rowKeyGetter, getRowExtraProps, getCellExtraProps, RowComponent, CellComponent);\n};\n\nexport default Rows;","import React, { memo } from \"react\";\nimport Rows from \"./Rows\";\n\nvar Tbody = function Tbody(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      tbodyRef = _ref.tbodyRef,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tbodyRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }));\n};\n\nexport default memo(Tbody);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#totalRows\", \"#columns\"];\n\nvar BodyTable = function BodyTable(_ref) {\n  var fixedLayout = _ref.fixedLayout,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedLayout\"]);\n\n  var API = useApi(SUBSCRIBE_EVENTS);\n  var tableStyle = {\n    tableLayout: fixedLayout ? \"fixed\" : \"auto\",\n    minWidth: \"100%\"\n  };\n  return /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    \"aria-rowcount\": API.totalRows,\n    style: tableStyle,\n    \"aria-colcount\": API.columns.length\n  }));\n};\n\nexport default BodyTable;","import { useRef, useEffect, useCallback } from \"react\";\n\nvar useColWidthsResizeObserver = function useColWidthsResizeObserver(API) {\n  var observerRef = useRef();\n  var mutationObserverRef = useRef();\n  var RO = observerRef.current;\n  var MO = mutationObserverRef.current;\n\n  if (!RO) {\n    RO = observerRef.current = new ResizeObserver(function (entries) {\n      for (var j = 0, colIndex; j < entries.length; j++) {\n        var target = entries[j].target;\n        colIndex = parseInt(target.getAttribute(\"aria-colindex\"));\n        /*\n            using target.offsetWidth instead of contentRect.width, because we need border-box sizing, \n            and { box: border-box } option does not work here\n        */\n\n        API.tbodyColumnWidths[colIndex - 1] = Math.round(target.offsetWidth);\n      }\n\n      API.emit(\"tbody-column-widths-changed\");\n    });\n    MO = mutationObserverRef.current = new MutationObserver(function (entries) {\n      for (var i = 0; i < entries.length; i++) {\n        var _entries$i = entries[i],\n            addedNodes = _entries$i.addedNodes,\n            removedNodes = _entries$i.removedNodes;\n\n        for (var j = 0; j < addedNodes.length; j++) {\n          RO.observe(addedNodes[j]);\n        }\n\n        for (var _j = 0; _j < removedNodes.length; _j++) {\n          RO.unobserve(removedNodes[_j]);\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    return function () {\n      RO.disconnect();\n      MO.disconnect();\n    };\n  }, []);\n  /* callback ref */\n\n  return useCallback(function (trNode) {\n    MO.disconnect();\n    RO.disconnect();\n\n    if (trNode) {\n      MO.observe(trNode, {\n        childList: true\n      });\n    }\n  }, []);\n};\n\nexport default useColWidthsResizeObserver;","import React from \"react\";\nimport Scroller from \"../../common/Scroller\";\n/*\n    According to specs, tr must always be inside tbody, thead or tfoot                \n*/\n\nvar TbodyScroller = function TbodyScroller() {\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"afvscr-scroller\",\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"tr\"\n  }));\n};\n\nexport default TbodyScroller;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useApi from \"../../useApi\";\nimport TableWrapper from \"./TableWrapper\";\nimport Thead from \"../common/Thead\";\nimport Tfoot from \"../common/Tfoot\";\nimport Tbody from \"../common/Tbody\";\nimport BodyTable from \"../common/BodyTable\";\nimport useColWidthsResizeObserver from \"./useColWidthsResizeObserver\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport cx from \"../../utils/cx\";\nvar subscribeEvents = [\"#headlessMode\", \"#totals\"];\n\nvar NonSticky = function NonSticky(_ref) {\n  var className = _ref.className,\n      tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      fixedLayout = _ref.fixedLayout,\n      onScroll = _ref.onScroll,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"fixedLayout\", \"onScroll\"]);\n\n  var API = useApi(subscribeEvents);\n  var headlessMode = API.headlessMode,\n      totals = API.totals;\n  /*\n      Hidden tfoot & thead are needed to 'hold' widths of tbody columns no to be narrower than real thead/tfoot\n      and notify model about columns width changes.\n      There are 3 tables rendered in this mode, so their column widths need to be synced somehow.\n  */\n\n  var widthsObserverRef = useColWidthsResizeObserver(API);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (headlessMode && !totals) {\n      console.warn(\"NonSticky table is rendered without headers and footers. This is not ok.\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cx(\"afvscr-nonst\", className)\n  }, props), headlessMode ? null : /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Thead, null)), /*#__PURE__*/React.createElement(ScrollContainer, {\n    ref: scrollContainerRef,\n    onScroll: onScroll,\n    reportScrollLeft: true\n  }, /*#__PURE__*/React.createElement(BodyTable, {\n    fixedLayout: fixedLayout\n  }, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, {\n    className: \"afvscr-hdnwrp\",\n    trRef: widthsObserverRef\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent,\n    className: \"afvscr-hdnwrp\",\n    trRef: headlessMode ? widthsObserverRef : undefined\n  }), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }))), totals && /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default memo(NonSticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect } from \"react\";\nimport Colgroup from \"../common/Colgroup\";\nimport TbodyScroller from \"../common/TbodyScroller\";\nimport ScrollContainer from \"../../common/ScrollContainer\";\nimport Thead from \"../common/Thead\";\nimport Tbody from \"../common/Tbody\";\nimport Tfoot from \"../common/Tfoot\";\nimport BodyTable from \"../common/BodyTable\";\nimport useApi from \"../../useApi\";\nimport cx from \"../../utils/cx\";\nvar SUBSCRIBE_EVENTS = [\"#headlessMode\", \"#totals\"];\n/*\n    Todo:\n        measure thead & tfoot heights in order to properly calculate available space for rows\n*/\n\nvar Sticky = function Sticky(_ref) {\n  var tbodyRef = _ref.tbodyRef,\n      scrollContainerRef = _ref.scrollContainerRef,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      RowComponent = _ref.RowComponent,\n      CellComponent = _ref.CellComponent,\n      TotalsCellComponent = _ref.TotalsCellComponent,\n      fixedLayout = _ref.fixedLayout,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"tbodyRef\", \"scrollContainerRef\", \"getRowExtraProps\", \"getCellExtraProps\", \"RowComponent\", \"CellComponent\", \"TotalsCellComponent\", \"fixedLayout\", \"className\"]);\n\n  var _useApi = useApi(SUBSCRIBE_EVENTS),\n      headlessMode = _useApi.headlessMode,\n      totals = _useApi.totals;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    /*\n        https://bugs.chromium.org/p/chromium/issues/detail?id=702927\n    */\n    var areTotalsPresent = totals && totals.length !== 0;\n    useEffect(function () {\n      if (!headlessMode || areTotalsPresent) {\n        /* TODO: tests fail without this if */\n        if (scrollContainerRef.current) {\n          var table = scrollContainerRef.current.querySelector(\"table\");\n          var tableStyle = getComputedStyle(table);\n\n          if (tableStyle.borderCollapse === \"collapse\") {\n            console.warn(\"You use sticky table version. Due to special border behavior when scrolling, use border-collpase: separate.%o\", \"https://bugs.chromium.org/p/chromium/issues/detail?id=702927\");\n          }\n        }\n      }\n    }, [headlessMode, areTotalsPresent]);\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    ref: scrollContainerRef,\n    reportScrollLeft: true,\n    className: cx(\"afvscr-st\", className)\n  }, props), /*#__PURE__*/React.createElement(BodyTable, {\n    fixedLayout: fixedLayout\n  }, /*#__PURE__*/React.createElement(Colgroup, null), headlessMode ? null : /*#__PURE__*/React.createElement(Thead, null), /*#__PURE__*/React.createElement(TbodyScroller, null), /*#__PURE__*/React.createElement(Tbody, {\n    tbodyRef: tbodyRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    RowComponent: RowComponent,\n    CellComponent: CellComponent\n  }), totals && /*#__PURE__*/React.createElement(Tfoot, {\n    TotalsCellComponent: TotalsCellComponent\n  })));\n};\n\nexport default memo(Sticky);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isPositionStickySupported from \"../utils/isPositionStickySupported\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport FixedSizeTableStore from \"../models/FixedSizeTable\";\nimport VariableSizeTableStore from \"../models/VariableSizeTable\";\nimport RowComponentDefault from \"./common/Row\";\nimport CellComponentDefault from \"./common/Cell\";\nimport TotalsCellComponentDefault from \"./common/TotalsCell\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport NonStickyComponent from \"./NonSticky\";\nimport StickyComponent from \"./Sticky\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar Table = function Table(_ref) {\n  var fixedSize = _ref.fixedSize,\n      columns = _ref.columns,\n      totals = _ref.totals,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      getCellExtraProps = _ref.getCellExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      headless = _ref.headless,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      dataRef = _ref.dataRef,\n      nonSticky = _ref.nonSticky,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"columns\", \"totals\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"getCellExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"headless\", \"RowCountWarningContainer\", \"dataRef\", \"nonSticky\", \"className\"]);\n\n  var scrollContainerRef = useRef();\n  var tbodyRef = useRef();\n  var Store = useStore(fixedSize ? FixedSizeTableStore : VariableSizeTableStore, dataRef);\n  useEffect(function () {\n    Store.merge({\n      headlessMode: headless,\n      rowDataGetter: getRowData,\n      rowKeyGetter: getRowKey,\n      overscanRowsCount: overscanRowsCount,\n      totals: totals,\n      columns: columns,\n      totalRows: Math.max(rowCount, 0),\n      rowsContainerNode: tbodyRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    });\n  });\n  /*\n      Only cells inside thead/tfoot can be sticky.\n      If thead/tfoot are hidden - we can easily render lighter StickyComponent to avoid extra wrappers\n  */\n\n  var ComponentVariant = headless && !totals || !nonSticky && isPositionStickySupported() ? StickyComponent : NonStickyComponent;\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ComponentVariant, _extends({\n    className: cx(\"afvscr-table-wrapper\", className),\n    scrollContainerRef: scrollContainerRef,\n    getRowExtraProps: getRowExtraProps,\n    getCellExtraProps: getCellExtraProps,\n    tbodyRef: tbodyRef\n  }, props)) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    // unique key for column\n    dataKey: PropTypes.string.isRequired,\n    // for details see CellComponent implementation\n    getCellData: PropTypes.func,\n    getEmptyCellData: PropTypes.func,\n    format: PropTypes.func,\n    render: PropTypes.func,\n    formatTotal: PropTypes.func,\n    visibility: PropTypes.oneOf([\"visible\", \"hidden\"]),\n    sort: PropTypes.oneOf([\"locale\", \"numeric\"]),\n    // column props, affecting colgroup > col tags\n    background: PropTypes.string,\n    border: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    CellComponent: PropTypes.elementType,\n    getCellExtraProps: PropTypes.func\n  })).isRequired,\n  getCellExtraProps: PropTypes.func,\n  totals: PropTypes.objectOf( // array may contain: \"sum\", \"average\", \"count\", \"max\", \"min\"\n  PropTypes.array),\n  nonSticky: PropTypes.bool,\n  headless: PropTypes.bool,\n  HeaderRowComponent: PropTypes.elementType,\n  CellComponent: PropTypes.elementType,\n  TotalsCellComponent: PropTypes.elementType,\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object,\n  // Determines, if table-layout: fixed is applied to main table\n  fixedLayout: PropTypes.bool\n}) : {};\nTable.defaultProps = Object.assign({}, commonDefaultProps, {\n  fixedLayout: false,\n  headless: false,\n  //    For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n  //    If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n  //    memo(observer(RowComponentDefault)) will do the trick.\n  RowComponent: memo(RowComponentDefault),\n  CellComponent: CellComponentDefault,\n  TotalsCellComponent: TotalsCellComponentDefault,\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default memo(Table);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRowProps } from \"../../utils/extraPropsGetters\";\n\nvar Row = function Row(_ref) {\n  var getRowData = _ref.getRowData,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowIndex = _ref.rowIndex;\n  var rowData = getRowData(rowIndex);\n  return /*#__PURE__*/React.createElement(\"div\", getRowProps(rowData, rowIndex, rowIndex, getRowExtraProps), rowData);\n};\n\nRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  getRowData: PropTypes.func.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  getRowExtraProps: PropTypes.func\n} : {};\nexport default Row;","import React, { useEffect } from \"react\";\nimport useApi from \"../../useApi\";\nvar SUBSCRIBE_EVENTS = [\"#startIndex\", \"#endIndex\", \"#rowKeyGetter\", \"#rowDataGetter\"];\n\nvar getVisibleRows = function getVisibleRows(rangeFrom, rangeTo, getRowData, getRowKey, getRowExtraProps, RowComponent) {\n  var result = [];\n\n  for (var rowKey; rangeFrom < rangeTo; rangeFrom++) {\n    rowKey = getRowKey ? getRowKey(rangeFrom) : rangeFrom;\n    result.push( /*#__PURE__*/React.createElement(RowComponent, {\n      getRowExtraProps: getRowExtraProps,\n      rowIndex: rangeFrom,\n      key: rowKey,\n      getRowData: getRowData\n    }));\n  }\n\n  return result;\n};\n\nvar Rows = function Rows(_ref) {\n  var getRowExtraProps = _ref.getRowExtraProps,\n      RowComponent = _ref.RowComponent;\n  var API = useApi(SUBSCRIBE_EVENTS);\n  useEffect(function () {\n    API.emit(\"rows-rendered\");\n  });\n  return getVisibleRows(API.startIndex, API.endIndex, API.rowDataGetter, API.rowKeyGetter, getRowExtraProps, RowComponent);\n};\n\nexport default Rows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { memo, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Context from \"../Context\";\nimport useStore from \"../utils/useStore\";\nimport VariableSizeListStore from \"../models/VariableSizeList\";\nimport FixedSizeListStore from \"../models/FixedSizeList\";\nimport ScrollContainer from \"../common/ScrollContainer\";\nimport RowComponentDefault from \"./common/Row\";\nimport Rows from \"./common/Rows\";\nimport Scroller from \"../common/Scroller\";\nimport RowCountWarningContainerDefault from \"../common/RowCountWarningContainer\";\nimport commonPropTypes from \"../commonPropTypes\";\nimport commonDefaultProps from \"../commonDefaultProps\";\nimport cx from \"../utils/cx\";\n\nvar List = function List(_ref) {\n  var fixedSize = _ref.fixedSize,\n      getRowData = _ref.getRowData,\n      getRowKey = _ref.getRowKey,\n      getRowExtraProps = _ref.getRowExtraProps,\n      rowCount = _ref.rowCount,\n      overscanRowsCount = _ref.overscanRowsCount,\n      rowCountWarningsTable = _ref.rowCountWarningsTable,\n      RowCountWarningContainer = _ref.RowCountWarningContainer,\n      _ref$RowComponent = _ref.RowComponent,\n      RowComponent = _ref$RowComponent === void 0 ? RowComponentDefault : _ref$RowComponent,\n      dataRef = _ref.dataRef,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"fixedSize\", \"getRowData\", \"getRowKey\", \"getRowExtraProps\", \"rowCount\", \"overscanRowsCount\", \"rowCountWarningsTable\", \"RowCountWarningContainer\", \"RowComponent\", \"dataRef\", \"className\"]);\n\n  var scrollContainerRef = useRef();\n  var rowsContainerRef = useRef();\n  var Store = useStore(fixedSize ? FixedSizeListStore : VariableSizeListStore, dataRef);\n  useEffect(function () {\n    Store.merge({\n      rowDataGetter: getRowData,\n      rowKeyGetter: getRowKey,\n      overscanRowsCount: overscanRowsCount,\n      totalRows: rowCount,\n      rowsContainerNode: rowsContainerRef.current,\n      scrollContainerNode: scrollContainerRef.current\n    });\n  });\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: Store\n  }, rowCount > 0 ? /*#__PURE__*/React.createElement(ScrollContainer, _extends({\n    className: cx(\"afvscr-list-wrapper\", className),\n    ref: scrollContainerRef\n  }, props), /*#__PURE__*/React.createElement(Scroller, {\n    Component: \"div\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: rowsContainerRef\n  }, /*#__PURE__*/React.createElement(Rows, {\n    RowComponent: RowComponent,\n    getRowExtraProps: getRowExtraProps\n  }))) : rowCountWarningsTable ? /*#__PURE__*/React.createElement(RowCountWarningContainer, null, rowCountWarningsTable[rowCount]) : null);\n};\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, commonPropTypes, {\n  RowCountWarningContainer: PropTypes.elementType,\n  rowCountWarningsTable: PropTypes.object\n}) : {};\nList.defaultProps = Object.assign({}, commonDefaultProps, {\n  /*\n      For 90% non-reactive solutions, which only provide new getRowData when data is changed, memo is ok.\n      If RowComponent should be wrapped my mobx observer - non-memo version should be imported.\n      memo(observer(RowComponentDefault)) will do the trick.\n  */\n  RowComponent: memo(RowComponentDefault),\n  RowCountWarningContainer: RowCountWarningContainerDefault\n});\nexport default memo(List);"],"sourceRoot":""}