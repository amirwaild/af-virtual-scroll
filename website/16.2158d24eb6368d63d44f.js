/*! For license information please see 16.2158d24eb6368d63d44f.js.LICENSE.txt */
(window.Z=window.Z||[]).push([[16],{1281:function(e,t,l){"use strict";l.r(t);var a=l(0),c=l(4),r=l(1);var n={basic:function(){return Object(r.c)(a.Fragment,null,Object(r.c)("h3",null,"Common props"),Object(r.c)("ul",null,Object(r.c)("li",null,Object(r.c)("h4",{"data-required":!0},"rowCount"),Object(r.c)("p",null,"Indicates number of rows for table/list.")),Object(r.c)("li",null,Object(r.c)("h4",{"data-required":!0},"getRowData(rowIndex)"),Object(r.c)("p",null,"Returns row data object. If a reference to this method changes - table/list reloads data, so it should be wrapped with useCallback.")),Object(r.c)("li",null,Object(r.c)("h4",null,"getRowKey(rowIndex)"),Object(r.c)("p",null,"By default rowIndex is used as row key. If you want to optimize this - go ahead.")),Object(r.c)("li",null,Object(r.c)("h4",null,"getRowExtraProps(rowData,rowIndex)"),Object(r.c)("p",null,"Returns an object of extra props, that will be passed to row wrapper(usually tr for table and div for list).")),Object(r.c)("li",null,Object(r.c)("h4",null,"className"),Object(r.c)("p",null,"Widget wrapper additional css class.")),Object(r.c)("li",null,Object(r.c)("h4",null,"fixedSize"),Object(r.c)("p",null,"By default table/list assumes, that it's rows have different heights. If you are SURE, that all rows always will have same height(after collapsing widget width, etc.) - put this prop as true. This will optimize calculations.")),Object(r.c)("li",null,Object(r.c)("h4",null,"overscanRowsCount"),Object(r.c)("p",null,"Determines, how many rows are drawn above and below table/list visible part."))))}},o={name:"a8iifa-wrapperCss",styles:'text-align:left;margin-left:1em;[data-required]{&:after{color:#780b0b;content:" (required)";}};label:wrapperCss;'};t.default=function(){var e=Object(c.h)().docpage,t=e&&n[e];return t?Object(r.c)("div",{css:o},Object(r.c)(t,null)):"Page not found"}}}]);
//# sourceMappingURL=sm.16.74e137f0c5896c61f3f63acff004370b.map